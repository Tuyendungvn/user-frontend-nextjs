{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { PATH } from \"@routes\";\nimport { cleanObject, formatParams } from \"@common/functions\";\nimport { useRedirect } from \"@common/hooks/useRedirect\";\nimport { getAllRecruitment } from \"@redux/actions/recruitment\";\nimport Sort from \"./components/Sort\";\nimport Pagination from \"@components/Pagination\";\nimport ErrorBoundary from \"@components/ErrorBoundary\";\nimport Filter from \"@components/Filter\";\nimport Search from \"@components/SearchWithProvince\";\nimport JobCard from \"@designs/Card/JobCard\";\nimport NotFoundAlert from \"@designs/NotFoundAlert\";\nimport SlickSlider from \"@designs/SlickSlider\";\nimport { AdsContainer, Content, ListCards, ListCardsContainer, JobContainer, JobWrapper, SearchResultContainer, Ads } from \"./styles\";\nconst SIZE_PER_PAGE = 12;\nconst MOBILE_SCREEN = 1023;\n\nconst Job = props => {\n  const {\n    0: currentWidth,\n    1: setCurentWidth\n  } = useState(0);\n  const dispatch = useDispatch();\n  const redirect = useRedirect();\n  const fullQuery = useRouter().query;\n  const {\n    career: _career,\n    level: _level,\n    salary: _salary,\n    type: _type,\n    province: _province,\n    k: _keywords,\n    page = 1\n  } = fullQuery;\n  const career = formatParams(decodeURIComponent(_career || \"\"));\n  const level = formatParams(decodeURIComponent(_level || \"\"));\n  const salary = formatParams(decodeURIComponent(_salary || \"\"));\n  const type = formatParams(decodeURIComponent(_type || \"\"));\n  const province = formatParams(decodeURIComponent(_province || \"\"));\n  const keywords = formatParams(decodeURIComponent(_keywords || \"\"));\n  const {\n    allRecruitment: {\n      results: allJob = [],\n      totalCount = 0,\n      loading\n    }\n  } = useSelector(state => state.recruitment);\n  const {\n    sortTypeSelected\n  } = useSelector(state => state.recruitment);\n  useEffect(() => {\n    getAllJobAPI();\n  }, [fullQuery, sortTypeSelected]);\n\n  const handleWindowResize = () => {\n    setCurentWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    handleWindowResize();\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, [currentWidth]);\n\n  const getAllJobAPI = () => {\n    const payload = {\n      keyword: keywords,\n      filterRecruitment: {\n        slugCareer: career,\n        slugLevel: level,\n        slugLevelPrice: salary,\n        slugType: type,\n        slugProvince: province,\n        sortType: (sortTypeSelected === null || sortTypeSelected === void 0 ? void 0 : sortTypeSelected.value) || \"latest\"\n      },\n      page: Number(page) - 1,\n      size: SIZE_PER_PAGE\n    };\n    dispatch(getAllRecruitment(cleanObject(payload)));\n  };\n\n  const {\n    listAdsJobPage\n  } = useSelector(state => state.ads);\n\n  const handlePageChange = newPage => {\n    redirect(PATH.JOB, fullQuery, _objectSpread(_objectSpread({}, fullQuery), {}, {\n      page: newPage + 1\n    }));\n  };\n\n  const custom = {\n    dots: true,\n    infinite: true,\n    slidesToScroll: 1,\n    autoplay: true,\n    speed: 500,\n    slidesPerRow: 1,\n    rows: 1,\n    appendDots: dots => /*#__PURE__*/_jsx(\"ul\", {\n      children: dots\n    }),\n    customPaging: i => /*#__PURE__*/_jsx(\"div\", {\n      className: \"ft-slick__dots--custom\"\n    })\n  };\n  return /*#__PURE__*/_jsxs(JobWrapper, {\n    children: [/*#__PURE__*/_jsx(Search, {}), /*#__PURE__*/_jsxs(JobContainer, {\n      children: [/*#__PURE__*/_jsx(Filter, {}), /*#__PURE__*/_jsxs(Content, {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxs(SearchResultContainer, {\n          children: [/*#__PURE__*/_jsx(Sort, {\n            totalCount: totalCount\n          }), /*#__PURE__*/_jsxs(ListCardsContainer, {\n            children: [(!loading && !totalCount || totalCount == 0) && /*#__PURE__*/_jsx(NotFoundAlert, {}), /*#__PURE__*/_jsx(ErrorBoundary, {\n              children: /*#__PURE__*/_jsx(ListCards, {\n                children: allJob === null || allJob === void 0 ? void 0 : allJob.map((job, index) => /*#__PURE__*/_jsx(JobCard, {\n                  job: job\n                }, index))\n              })\n            })]\n          }), totalCount > 0 && /*#__PURE__*/_jsx(Pagination, {\n            page: Number(page) - 1,\n            sizePerPage: SIZE_PER_PAGE,\n            totalSize: totalCount,\n            onPageChange: handlePageChange,\n            className: \"flex justify-center mt-4 laptop:justify-start\"\n          })]\n        }), currentWidth <= MOBILE_SCREEN ? /*#__PURE__*/_jsx(AdsContainer, {\n          children: /*#__PURE__*/_jsx(SlickSlider, {\n            custom: custom,\n            className: \"slider-layout\",\n            children: listAdsJobPage.map((ad, index) => {\n              var _ad$, _ad$2;\n\n              return /*#__PURE__*/_jsx(\"a\", {\n                href: (_ad$ = ad[0]) === null || _ad$ === void 0 ? void 0 : _ad$.link,\n                children: /*#__PURE__*/_jsx(Ads, {\n                  className: \"mb-2\",\n                  dangerouslySetInnerHTML: {\n                    __html: (_ad$2 = ad[0]) === null || _ad$2 === void 0 ? void 0 : _ad$2.code\n                  }\n                }, index)\n              });\n            })\n          })\n        }) : /*#__PURE__*/_jsx(AdsContainer, {\n          children: listAdsJobPage.map((ad, index) => {\n            var _ad$3, _ad$4;\n\n            return /*#__PURE__*/_jsx(\"a\", {\n              href: (_ad$3 = ad[0]) === null || _ad$3 === void 0 ? void 0 : _ad$3.link,\n              children: /*#__PURE__*/_jsx(Ads, {\n                className: \"mb-2\",\n                dangerouslySetInnerHTML: {\n                  __html: (_ad$4 = ad[0]) === null || _ad$4 === void 0 ? void 0 : _ad$4.code\n                }\n              }, index)\n            });\n          })\n        })]\n      })]\n    })]\n  });\n};\n\nexport default Job;\n\nconst removeParams = _query => {\n  const newQuery = _objectSpread({}, _query);\n\n  delete newQuery.career;\n  delete newQuery.level;\n  delete newQuery.salary;\n  delete newQuery.type;\n  delete newQuery.province;\n  return newQuery || {};\n};\n\nfunction componentWillMount() {\n  throw new Error(\"Function not implemented.\");\n}","map":null,"metadata":{},"sourceType":"module"}