{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { useTranslation } from \"next-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _Link from \"next/link\";\nimport { isEmpty } from \"lodash\";\nimport { getLoggedInAccount } from \"@common/utils/auth\";\nimport { PATH } from \"@routes\";\nimport { getCurrentUser } from \"@redux/actions/auth\";\nimport UserInfo from \"./components/UserInfo\";\nimport Hamburger from \"./components/Hamburger\";\nimport Notification from \"./components/Notification\";\nimport ContentNotify from \"./components/ContentNotify\";\nimport { HeaderWrapper, HeaderContainer, LogoLink, Text, NavigationWrapper, PageNavigation, AuthenNavigation, Link, Button, Mobile, NotifyContainer, GroupInfo, SwitchWrapper, SwitchTitle } from \"./styles\";\nimport { getNotificationsByUser, getNotificationsSettingByUser } from \"@redux/actions/notification\";\nimport useAuth from \"@common/hooks/useAuth\";\nimport { SVG } from \"@designs/SVG\";\nimport Switch from \"@designs/Switch\";\nimport AlertDialog from \"@components/AlertDialog\";\nimport { updateUserProfile } from \"@redux/actions/user\";\nimport { refreshToken } from \"@redux/actions/auth\";\nimport { resetAction } from \"@redux/actions/common\";\n\nvar Header = function Header(props) {\n  var _props$type = props.type,\n      type = _props$type === void 0 ? \"\" : _props$type;\n\n  var _useTranslation = useTranslation([\"common\"]),\n      t = _useTranslation.t;\n\n  var dispatch = useDispatch();\n\n  var _useAuth = useAuth(),\n      isAuth = _useAuth.isAuth;\n\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      currentUser = _useSelector.currentUser;\n\n  var userInfo = (currentUser === null || currentUser === void 0 ? void 0 : currentUser.userInfo) || {};\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.actions;\n  }),\n      actionSuccess = _useSelector2.actionSuccess;\n\n  var _useState = useState(),\n      onSeekingJob = _useState[0],\n      setOnSeekingJob = _useState[1];\n\n  useEffect(function () {\n    if (actionSuccess) {\n      dispatch(refreshToken());\n      dispatch(resetAction());\n    }\n  }, [actionSuccess]);\n  useEffect(function () {\n    if (isEmpty(currentUser) && (userInfo === null || userInfo === void 0 ? void 0 : userInfo.email) !== null) {\n      dispatch(getCurrentUser(getLoggedInAccount()));\n    } else {\n      dispatch(getNotificationsByUser({\n        userId: userInfo === null || userInfo === void 0 ? void 0 : userInfo._id\n      }));\n      dispatch(getNotificationsSettingByUser({\n        id: userInfo === null || userInfo === void 0 ? void 0 : userInfo._id\n      }) // getNotificationsSettingById({\n      //   id: userInfo?._id,\n      // }),\n      );\n    }\n  }, [currentUser]);\n  useEffect(function () {\n    var _currentUser$userInfo;\n\n    if ((currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$userInfo = currentUser.userInfo) === null || _currentUser$userInfo === void 0 ? void 0 : _currentUser$userInfo.isSeekingJob) === true) {\n      setOnSeekingJob(true);\n    } else {\n      setOnSeekingJob(false);\n    }\n  }, [actionSuccess, currentUser]);\n\n  var handleConfirm = function handleConfirm() {\n    var payload = {\n      updateUserInput: {\n        isSeekingJob: !onSeekingJob\n      }\n    };\n    dispatch(updateUserProfile(payload));\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(HeaderWrapper, {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxs(HeaderContainer, {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsx(LogoLink, {\n          routeName: PATH.HOME,\n          children: /*#__PURE__*/_jsx(SVG, {\n            name: \"logo/logo\"\n          })\n        }), /*#__PURE__*/_jsxs(NavigationWrapper, {\n          children: [/*#__PURE__*/_jsx(PageNavigation, {\n            children: /*#__PURE__*/_jsxs(Fragment, {\n              children: [/*#__PURE__*/_jsx(Link, {\n                highlight: type === \"job\",\n                routeName: PATH.JOB,\n                children: t(\"header.job\")\n              }), /*#__PURE__*/_jsx(Link, {\n                highlight: type === \"company\",\n                routeName: PATH.COMPANY,\n                children: t(\"header.company\")\n              })]\n            })\n          }), isAuth ? /*#__PURE__*/_jsxs(GroupInfo, {\n            children: [/*#__PURE__*/_jsxs(SwitchWrapper, {\n              hasBorderLeft: false,\n              children: [/*#__PURE__*/_jsx(SwitchTitle, {\n                children: \"T\\xECm vi\\u1EC7c\"\n              }), /*#__PURE__*/_jsx(AlertDialog, {\n                ButtonMenu: /*#__PURE__*/_jsx(Switch, {\n                  enabled: onSeekingJob\n                }),\n                title: \"Bật/tắt chế độ tìm việc\",\n                content: \"B\\u1EA1n c\\xF3 mu\\u1ED1n thay \\u0111\\u1ED5i ch\\u1EBF \\u0111\\u1ED9 t\\xECm vi\\u1EC7c kh\\xF4ng?\",\n                onConfirm: handleConfirm\n              })]\n            }), /*#__PURE__*/_jsx(NotifyContainer, {\n              hasBorderLeft: false,\n              children: /*#__PURE__*/_jsx(Notification, {})\n            }), /*#__PURE__*/_jsx(UserInfo, {})]\n          }) : /*#__PURE__*/_jsxs(AuthenNavigation, {\n            children: [/*#__PURE__*/_jsx(_Link, {\n              href: \"https://employer.tuyendungvn.com/\",\n              children: /*#__PURE__*/_jsx(Text, {\n                children: t(\"header.employer\")\n              })\n            }), /*#__PURE__*/_jsx(NotifyContainer, {\n              hasBorderLeft: true,\n              children: /*#__PURE__*/_jsx(Notification, {})\n            }), /*#__PURE__*/_jsx(Button, {\n              outline: true,\n              routeName: PATH.REGISTER,\n              children: t(\"header.register\")\n            }), /*#__PURE__*/_jsx(Button, {\n              fullFill: true,\n              routeName: PATH.LOGIN,\n              children: t(\"header.login\")\n            })]\n          })]\n        }), /*#__PURE__*/_jsx(Mobile.NavigationWrapper, {\n          children: /*#__PURE__*/_jsx(Hamburger, {})\n        })]\n      })\n    }), /*#__PURE__*/_jsx(ContentNotify, {})]\n  });\n};\n\nexport default Header;","map":null,"metadata":{},"sourceType":"module"}