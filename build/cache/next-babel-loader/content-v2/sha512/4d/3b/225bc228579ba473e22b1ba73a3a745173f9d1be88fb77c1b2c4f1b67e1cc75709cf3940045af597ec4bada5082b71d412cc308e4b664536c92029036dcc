{"ast":null,"code":"import { call, put } from \"redux-saga/effects\";\nimport * as services from \"@services/record\";\nimport { getAllRecordByUserSuccess, getRecordByIdSuccess, getRecordByUserIdSuccess } from \"@redux/actions/record\";\nexport function* getAllRecordSaga(payload) {\n  const variables = payload.payload;\n  const response = yield call(services.getRecordByUserId, variables);\n  const {\n    getRecordByUser: result\n  } = (response === null || response === void 0 ? void 0 : response.data) || {};\n\n  if (result) {\n    yield put(getAllRecordByUserSuccess(result));\n  }\n}\nexport function* getRecordByIdSaga(payload) {\n  const variables = payload.payload;\n  const response = yield call(services.getRecordById, variables);\n  const {\n    getRecordById: result\n  } = (response === null || response === void 0 ? void 0 : response.data) || {};\n\n  if (result) {\n    yield put(getRecordByIdSuccess(result));\n  }\n}\nexport function* getRecordByUserIdSaga(payload) {\n  const variables = payload.payload;\n  const response = yield call(services.getRecordByUserId, variables);\n  const {\n    getRecordByUser: result\n  } = (response === null || response === void 0 ? void 0 : response.data) || {};\n\n  if (result) {\n    yield put(getRecordByUserIdSuccess(result));\n  }\n}","map":null,"metadata":{},"sourceType":"module"}