{"ast":null,"code":"/* eslint-disable consistent-return */\n\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport produce from \"immer\";\nimport * as types from \"@redux/types/auth\";\nimport { setUserCookies, removeUserCookies } from \"@common/utils/auth\";\nvar initial = {\n  currentUser: null,\n  isAuth: null,\n  accountInfo: null\n};\n\nvar auth = function auth() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    var loginSuccess = function loginSuccess() {\n      var payload = action.payload;\n      draft.currentUser = payload;\n      draft.isAuth = true;\n      setUserCookies(payload);\n    };\n\n    switch (action.type) {\n      case types.LOGIN_SUCCESS:\n        loginSuccess();\n        break;\n\n      case types.GET_TOKEN_SUCCESS:\n        loginSuccess();\n        break;\n\n      case types.REFRESH_TOKEN_SUCCESS:\n        loginSuccess();\n        break;\n\n      case types.GET_CURRENT_USER:\n        var payload = action.payload;\n        draft.currentUser = payload;\n        draft.isAuth = !!draft.currentUser;\n        break;\n\n      case types.REMOVE_CURRENT_USER:\n        draft.currentUser = null;\n        draft.isAuth = false;\n        removeUserCookies();\n        break;\n\n      case types.SET_IS_AUTH:\n        draft.isAuth = action.payload;\n        break;\n\n      case types.SET_ACCOUNT_INFO:\n        draft.accountInfo = action.payload;\n        break;\n\n      default:\n        return draft;\n    }\n  });\n};\n\nexport default auth;","map":null,"metadata":{},"sourceType":"module"}