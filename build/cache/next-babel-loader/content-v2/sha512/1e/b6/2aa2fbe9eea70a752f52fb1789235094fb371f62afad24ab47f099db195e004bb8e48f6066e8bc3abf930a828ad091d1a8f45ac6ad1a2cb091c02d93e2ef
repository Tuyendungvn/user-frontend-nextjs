{"ast":null,"code":"import { gql } from \"apollo-boost\";\nimport { graphQLCommon } from \"@common/utils/api\";\nconst GET_NOTIFICATION = gql`\n  query($userId: String!) {\n    getNotifyByUser(userId: $userId) {\n      _id\n      name\n      user {\n        _id\n        displayName\n      }\n      company {\n        _id\n        name\n      }\n      description\n      createdAt\n      seen\n      scheduleInterview {\n        _id\n        positionInterview\n        scheduleType\n        scheduleTime\n        scheduleLocation\n        interviewerName\n        interviewerPhone\n        interviewerEmail\n        receiver {\n          _id\n          displayName\n        }\n        company {\n          _id\n          name\n        }\n        recruitment {\n          _id\n        }\n        isConfirmFromReceiver\n      }\n      invitationApply {\n        _id\n        positionApply\n        address\n        receiver {\n          _id\n          displayName\n        }\n        sender {\n          _id\n          displayName\n        }\n        senderName\n        senderPhone\n        senderEmail\n        recruitment {\n          _id\n          name\n        }\n        company {\n          _id\n          name\n        }\n        isConfirmFromReceiver\n      }\n    }\n  }\n`;\nexport const getNotificationByUser = async (variables) => {\n  const result = await graphQLCommon(GET_NOTIFICATION, variables);\n  return result;\n};\nconst SET_SEEN_FOR_NOTIFY = gql`\n  mutation($userId: String!) {\n    setSeenForNotify(userId: $userId)\n  }\n`;\nexport const setSeenForNotify = async variables => {\n  const result = await graphQLCommon(SET_SEEN_FOR_NOTIFY, variables);\n  return result;\n};\nconst GET_NOTIFICATION_SETTING = gql`\n  query($filterNotifySetting: FilterNotifySetting) {\n    getAllNotifySetting(filterNotifySetting: $filterNotifySetting) {\n      results {\n        _id\n        name\n        description\n        createdAt\n        permission\n      }\n    }\n  }\n`;\nexport const getNotificationSetting = async (variables) => {\n  const result = await graphQLCommon(GET_NOTIFICATION_SETTING, variables);\n  return result;\n};\nconst GET_NOTIFICATION_SETTING_BY_USER = gql`\n  query($id: String!) {\n    getNotifySettingByUser(id: $id) {\n      _id\n      name\n      description\n      createdAt\n      permission\n    }\n  }\n`;\nexport const getNotifySettingByUser = async (variables) => {\n  const result = await graphQLCommon(GET_NOTIFICATION_SETTING_BY_USER, variables);\n  return result;\n};\nconst CREATE_NOTIFY_SETTING = gql`\n  mutation($notifySettingInput: NotifySettingInput!) {\n    createNotify(notifySettingInput: $notifySettingInput) {\n      _id\n      name\n      user {\n        _id\n        displayName\n      }\n      company {\n        _id\n        name\n      }\n      seen\n      description\n      noticeExpiration\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createNotifySetting = async variables => {\n  const result = await graphQLCommon(CREATE_NOTIFY_SETTING, variables);\n  return result;\n};\nconst CREATE_NOTIFY = gql`\n  mutation($notifyCreateInput: NotifyCreateInput!) {\n    createNotify(notifyCreateInput: $notifyCreateInput) {\n      _id\n      name\n      user {\n        _id\n        displayName\n      }\n      company {\n        _id\n        name\n      }\n      seen\n      description\n      noticeExpiration\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createNotify = async variables => {\n  const result = await graphQLCommon(CREATE_NOTIFY, variables);\n  return result;\n};","map":null,"metadata":{},"sourceType":"module"}