{"ast":null,"code":"import _regeneratorRuntime from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getToken),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(refreshToken);\n\nimport { call, put } from \"redux-saga/effects\";\nimport * as services from \"@services/auth\";\nimport { showNotification } from \"@components/ToastNotification\";\nimport { getTokenSuccess, refreshTokenSuccess } from \"@redux/actions/auth\";\nexport function getToken(payload) {\n  var variables, response, result, message;\n  return _regeneratorRuntime.wrap(function getToken$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          variables = payload.payload;\n          _context.next = 3;\n          return call(services.getAccessToken, variables);\n\n        case 3:\n          response = _context.sent;\n          result = response === null || response === void 0 ? void 0 : response.data;\n          message = \"Số điện thoại hoặc email của bạn đã được đăng ký\";\n\n          if (!result) {\n            _context.next = 12;\n            break;\n          }\n\n          showNotification({\n            type: \"success\",\n            title: \"Thông báo\",\n            message: \"Đăng nhập thành công!\"\n          });\n          _context.next = 10;\n          return put(getTokenSuccess(result));\n\n        case 10:\n          _context.next = 13;\n          break;\n\n        case 12:\n          showNotification({\n            type: \"error\",\n            message: message,\n            title: \"Thông báo\"\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function refreshToken() {\n  var response, _ref, result;\n\n  return _regeneratorRuntime.wrap(function refreshToken$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return call(services.refreshToken);\n\n        case 2:\n          response = _context2.sent;\n          _ref = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref.refreshToken;\n\n          if (!result) {\n            _context2.next = 7;\n            break;\n          }\n\n          _context2.next = 7;\n          return put(refreshTokenSuccess(result));\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":null,"metadata":{},"sourceType":"module"}