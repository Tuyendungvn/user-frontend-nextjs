{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * @description This will help you remove all properties which has null/undefined value\n * @returns an object may miss some key\n * @example\n *  input: {\n *    cow: \"something\",\n *    cat: 0,\n *    fish: undefined.\n *    dog: false\n *  }\n *\n *  output: {\n *    cow: \"something\",\n *    cat: 0,\n *    dog: false\n *  }\n */\nexport const cleanObject = initObject => {\n  if (!initObject || typeof initObject !== \"object\") {\n    console.error(\"[CleanObject] Object input is not valid!\");\n    return initObject;\n  }\n\n  try {\n    const obj = _objectSpread({}, initObject);\n\n    for (let propName in obj) {\n      if (obj[propName] === undefined || obj[propName] === null) {\n        delete obj[propName];\n      } else {\n        if (typeof obj[propName] === \"object\" && !Array.isArray(obj[propName])) obj[propName] = cleanObject(obj[propName]);\n      }\n    }\n\n    return obj;\n  } catch (error) {\n    console.error(error);\n    return initObject;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}