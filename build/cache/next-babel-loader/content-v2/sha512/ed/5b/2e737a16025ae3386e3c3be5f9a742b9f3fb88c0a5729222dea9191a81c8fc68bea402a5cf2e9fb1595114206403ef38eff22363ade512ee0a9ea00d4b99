{"ast":null,"code":"import { gql } from \"apollo-boost\";\nimport { graphQLCommon } from \"@common/utils/api\";\nconst GET_ALL_REQUEST_REVIEW = gql`\n  query($filterRequestReview: FilterRequestReview, $page: Int, $size: Int) {\n    getAllRequestReview(\n      filterRequestReview: $filterRequestReview\n      page: $page\n      size: $size\n    ) {\n      results {\n        _id\n        candidate {\n          _id\n          email\n        }\n        employer {\n          company {\n            _id\n            name\n            career {\n              name\n            }\n            location\n            logo {\n              default\n              small\n              medium\n            }\n          }\n          email\n        }\n        status\n        evaluate {\n          answer1 {\n            name\n            point\n          }\n          answer2 {\n            name\n            point\n          }\n          answer3 {\n            name\n            point\n          }\n          answer4 {\n            name\n            point\n          }\n          answer5 {\n            name\n            point\n          }\n          answer6 {\n            name\n            point\n          }\n          answer7 {\n            name\n            point\n          }\n          answer8 {\n            name\n            point\n          }\n          answer9 {\n            name\n            point\n          }\n          answer10 {\n            name\n            point\n          }\n          avgPoint\n        }\n      }\n      totalCount\n    }\n  }\n`;\nexport const getAllRequestReview = async variable => {\n  const response = await graphQLCommon(GET_ALL_REQUEST_REVIEW, variable);\n  return response;\n};\nconst GET_EVALUATE_BY_USER = gql`\n  query($userId: String!) {\n    getEvaluateByUser(userId: $userId) {\n      _id\n      evaluator {\n        company {\n          name\n          career {\n            name\n          }\n          location\n          logo {\n            default\n            small\n            medium\n          }\n        }\n      }\n      answer1 {\n        name\n        point\n      }\n      answer2 {\n        name\n        point\n      }\n      answer3 {\n        name\n        point\n      }\n      answer4 {\n        name\n        point\n      }\n      answer5 {\n        name\n        point\n      }\n      answer6 {\n        name\n        point\n      }\n      answer7 {\n        name\n        point\n      }\n      answer8 {\n        name\n        point\n      }\n      answer9 {\n        name\n        point\n      }\n      answer10 {\n        name\n        point\n      }\n      avgPoint\n    }\n  }\n`;\nexport const getEvaluateByUser = async variable => {\n  const response = await graphQLCommon(GET_EVALUATE_BY_USER, variable);\n  return response;\n};\nconst CREATE_REQUEST_REVIEW = gql`\n  mutation($createRequestReviewInput: CreateRequestReviewInput) {\n    createRequestReview(createRequestReviewInput: $createRequestReviewInput) {\n      _id\n    }\n  }\n`;\nexport const createRequestReview = async (variable) => {\n  const response = await graphQLCommon(CREATE_REQUEST_REVIEW, variable);\n  return response;\n};","map":null,"metadata":{},"sourceType":"module"}