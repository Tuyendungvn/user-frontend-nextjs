{"ast":null,"code":"import _regeneratorRuntime from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query Query($displayLocation: String!) {\\n    getAdsAllByLocation(displayLocation: $displayLocation) {\\n      _id\\n      name\\n      link\\n      code\\n      urlImage {\\n        default\\n        medium\\n        small\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($filterAds: FilterAds) {\\n    getAdsAll(filterAds: $filterAds) {\\n      _id\\n      name\\n      code\\n      urlImage {\\n        default\\n        medium\\n        small\\n      }\\n      slideImg {\\n        default\\n        medium\\n        small\\n      }\\n      displayLocation {\\n        name\\n        code\\n        value\\n        slug\\n        _id\\n      }\\n      link\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { gql } from \"apollo-boost\";\nimport { graphQLCommon } from \"@common/utils/api\";\nvar GET_ADS_ALL = gql(_templateObject());\nexport var getAdsAll = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(variables) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return graphQLCommon(GET_ADS_ALL, variables);\n\n          case 2:\n            result = _context.sent;\n            return _context.abrupt(\"return\", result);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getAdsAll(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar GET_ADS_BY_LOCATION = gql(_templateObject2());\nexport var getAdsByLocation = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(variables) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return graphQLCommon(GET_ADS_BY_LOCATION, variables);\n\n          case 2:\n            result = _context2.sent;\n            return _context2.abrupt(\"return\", result);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getAdsByLocation(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}