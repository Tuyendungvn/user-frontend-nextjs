{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch } from \"react-redux\";\nimport { setSortTypeSelected } from \"@redux/actions/recruitment\";\nimport Select from \"./components/Select\";\nimport { SortContainer, SortLabel, SortWrapper, TotalContainer } from \"./styles\";\n\nvar Sort = function Sort(props) {\n  var _useTranslation = useTranslation([\"job\"]),\n      t = _useTranslation.t;\n\n  var dispatch = useDispatch();\n  var totalCount = props.totalCount;\n  var renderSortOptions = [{\n    name: t(\"sort.default\"),\n    value: \"latest\"\n  }, {\n    name: t(\"sort.low-salary\"),\n    value: \"lowSalary\"\n  }, {\n    name: t(\"sort.high-salary\"),\n    value: \"highSalary\"\n  }, {\n    name: t(\"sort.latest\"),\n    value: \"latest\"\n  }, {\n    name: t(\"sort.oldest\"),\n    value: \"oldest\"\n  }];\n  useEffect(function () {\n    dispatch(setSortTypeSelected(renderSortOptions[0]));\n  }, []);\n\n  var _useState = useState(renderSortOptions[0]),\n      sortSelected = _useState[0],\n      setSortSelected = _useState[1];\n\n  var handleSort = function handleSort(option) {\n    setSortSelected(option);\n    dispatch(setSortTypeSelected(option));\n  };\n\n  return /*#__PURE__*/_jsxs(SortWrapper, {\n    children: [/*#__PURE__*/_jsxs(TotalContainer, {\n      children: [totalCount, \" \", t(\"total\")]\n    }), /*#__PURE__*/_jsxs(SortContainer, {\n      children: [/*#__PURE__*/_jsxs(SortLabel, {\n        children: [t(\"sort.self\"), \" :\"]\n      }), /*#__PURE__*/_jsx(Select, {\n        optionSelected: sortSelected,\n        onSelect: function onSelect(option) {\n          return handleSort(option);\n        },\n        options: renderSortOptions\n      })]\n    })]\n  });\n};\n\nexport default Sort;","map":null,"metadata":{},"sourceType":"module"}