{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport { useRouter } from \"next/router\";\nimport { useRedirect } from \"@common/hooks/useRedirect\";\nimport { cleanObject, formatParams } from \"@common/functions\";\nimport { PATH } from \"@routes\";\nimport { getAllCompany } from \"@redux/actions/company\";\nimport Search from \"@components/SearchCompany\";\nimport Pagination from \"@components/Pagination\";\nimport ErrorBoundary from \"@components/ErrorBoundary\";\nimport NotFoundAlert from \"@designs/NotFoundAlert\";\nimport CompanyItem from \"@designs/Card/CompanyItem\";\nimport { CardWrapper, Container, CountNumber, ListCardContainer, ResultCount, Wrapper } from \"./styles\";\nvar SIZE_PER_PAGE = 12;\n\nvar CompanyResult = function CompanyResult(props) {\n  var _useTranslation = useTranslation([\"company\"]),\n      t = _useTranslation.t;\n\n  var dispatch = useDispatch();\n  var redirect = useRedirect();\n  var fullQuery = useRouter().query;\n  var _keywords = fullQuery.k,\n      _province = fullQuery.p,\n      _fullQuery$page = fullQuery.page,\n      page = _fullQuery$page === void 0 ? 1 : _fullQuery$page;\n  var keywords = formatParams(decodeURIComponent(_keywords || \"\"));\n  var province = formatParams(decodeURIComponent(_province || \"\"));\n\n  var _useSelector = useSelector(function (state) {\n    return state.company;\n  }),\n      _useSelector$allCompa = _useSelector.allCompany,\n      _useSelector$allCompa2 = _useSelector$allCompa.results,\n      allCompany = _useSelector$allCompa2 === void 0 ? [] : _useSelector$allCompa2,\n      _useSelector$allCompa3 = _useSelector$allCompa.totalCount,\n      totalCount = _useSelector$allCompa3 === void 0 ? 0 : _useSelector$allCompa3,\n      loading = _useSelector$allCompa.loading;\n\n  useEffect(function () {\n    if (fullQuery) {\n      getCompaniesAPI();\n    }\n  }, [fullQuery]);\n\n  var getCompaniesAPI = function getCompaniesAPI() {\n    var payload = {\n      keyword: keywords,\n      filterCompany: {\n        slugProvince: province\n      },\n      page: Number(page) - 1,\n      size: SIZE_PER_PAGE\n    };\n    dispatch(getAllCompany(cleanObject(payload)));\n  };\n\n  var handlePageChange = function handlePageChange(newPage) {\n    redirect(PATH.JOB, fullQuery, {\n      page: newPage + 1\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(Wrapper, {\n    children: [/*#__PURE__*/_jsx(Search, {}), /*#__PURE__*/_jsxs(Container, {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxs(ResultCount, {\n        children: [/*#__PURE__*/_jsx(CountNumber, {\n          children: totalCount\n        }), \" \", t(\"found\")]\n      }), /*#__PURE__*/_jsxs(ErrorBoundary, {\n        children: [(!loading && !totalCount || totalCount == 0) && /*#__PURE__*/_jsx(NotFoundAlert, {\n          isCompany: true\n        }), /*#__PURE__*/_jsx(ListCardContainer, {\n          children: allCompany.map(function (company, index) {\n            return /*#__PURE__*/_jsx(CardWrapper, {\n              children: /*#__PURE__*/_jsx(CompanyItem, {\n                company: company\n              }, index)\n            });\n          })\n        })]\n      }), totalCount > 0 && /*#__PURE__*/_jsx(Pagination, {\n        page: Number(page) - 1,\n        sizePerPage: SIZE_PER_PAGE,\n        totalSize: totalCount,\n        onPageChange: handlePageChange,\n        className: \"mt-2\"\n      })]\n    })]\n  });\n};\n\nexport default CompanyResult;","map":null,"metadata":{},"sourceType":"module"}