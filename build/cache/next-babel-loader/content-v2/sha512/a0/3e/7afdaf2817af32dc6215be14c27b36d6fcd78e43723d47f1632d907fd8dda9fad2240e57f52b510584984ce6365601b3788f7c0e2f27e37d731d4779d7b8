{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useTranslation } from \"next-i18next\";\nimport Button from \"@designs/Button\";\nimport InputBox from \"@designs/Input\";\nimport Select from \"@designs/MultiSelect\";\nimport { ButtonWrapper, Form } from \"./styles\";\n\nvar EditSingleForm = function EditSingleForm(props) {\n  var formik = props.formik,\n      genderOptions = props.genderOptions,\n      initialValues = props.initialValues,\n      onSelected = props.onSelected,\n      handleClose = props.handleClose,\n      isLoading = props.isLoading,\n      districts = props.districts,\n      provinces = props.provinces,\n      wards = props.wards;\n\n  var _useTranslation = useTranslation([\"job-management\", \"common\"]),\n      t = _useTranslation.t;\n\n  return /*#__PURE__*/_jsxs(Form, {\n    children: [/*#__PURE__*/_jsx(InputBox, _objectSpread(_objectSpread({\n      label: t(\"personal-info.single.email\"),\n      placeholder: t(\"personal-info.single.email-placeholder\"),\n      type: \"text\",\n      value: formik.values.email,\n      disabled: true,\n      required: true\n    }, formik.getFieldProps(\"email\")), formik.getFieldMeta(\"email\"))), /*#__PURE__*/_jsx(InputBox, _objectSpread(_objectSpread({\n      label: t(\"personal-info.single.phone-number\"),\n      placeholder: t(\"personal-info.single.phone-number-placeholder\"),\n      type: \"text\",\n      required: true\n    }, formik.getFieldProps(\"phoneNumber\")), formik.getFieldMeta(\"phoneNumber\"))), /*#__PURE__*/_jsx(InputBox, _objectSpread(_objectSpread({\n      label: t(\"personal-info.single.id-card\"),\n      placeholder: t(\"personal-info.single.id-card-placeholder\"),\n      type: \"number\"\n    }, formik.getFieldProps(\"idCard\")), formik.getFieldMeta(\"idCard\"))), /*#__PURE__*/_jsx(InputBox, _objectSpread(_objectSpread({\n      label: t(\"personal-info.single.date-of-birth\"),\n      placeholder: t(\"personal-info.single.date-of-birth-placeholder\"),\n      className: \"cursor-pointer\",\n      type: \"date\",\n      required: true\n    }, formik.getFieldProps(\"dateOfBirth\")), formik.getFieldMeta(\"dateOfBirth\"))), /*#__PURE__*/_jsx(Select, {\n      label: t(\"personal-info.single.gender\"),\n      options: genderOptions,\n      defaultValue: initialValues.gender,\n      placeholder: t(\"personal-info.single.gender-placeholder\"),\n      onChangeSelect: onSelected(\"gender\", formik),\n      touched: formik.touched[\"gender\"],\n      error: formik.errors[\"gender\"],\n      required: true\n    }), /*#__PURE__*/_jsx(Select, {\n      label: t(\"personal-info.single.province\"),\n      options: provinces,\n      defaultValue: initialValues.province,\n      placeholder: t(\"personal-info.single.province-placeholder\"),\n      onChangeSelect: onSelected(\"province\", formik),\n      touched: formik.touched[\"province\"],\n      error: formik.errors[\"province\"],\n      required: true\n    }), /*#__PURE__*/_jsx(Select, {\n      label: t(\"personal-info.single.district\"),\n      options: districts,\n      defaultValue: initialValues.district,\n      placeholder: t(\"personal-info.single.district-placeholder\"),\n      onChangeSelect: onSelected(\"district\", formik),\n      touched: formik.touched[\"district\"],\n      error: formik.errors[\"district\"]\n    }), /*#__PURE__*/_jsx(Select, {\n      label: t(\"personal-info.single.wards\"),\n      options: wards,\n      defaultValue: initialValues.ward,\n      placeholder: t(\"personal-info.single.wards-placeholder\"),\n      onChangeSelect: onSelected(\"ward\", formik),\n      touched: formik.touched[\"ward\"],\n      error: formik.errors[\"ward\"]\n    }), /*#__PURE__*/_jsx(InputBox, _objectSpread(_objectSpread({\n      label: t(\"personal-info.single.address-details\"),\n      placeholder: t(\"personal-info.single.address-details-placeholder\"),\n      type: \"text\"\n    }, formik.getFieldProps(\"address\")), formik.getFieldMeta(\"address\"))), /*#__PURE__*/_jsxs(ButtonWrapper, {\n      children: [/*#__PURE__*/_jsx(Button, {\n        type: \"button\",\n        onClick: handleClose,\n        className: \"w-1/2 border border-solid border-primary\",\n        children: t(\"common:dialog.cancel\")\n      }), /*#__PURE__*/_jsx(Button, {\n        loading: isLoading,\n        primary: true,\n        type: \"submit\",\n        className: \"w-1/2\",\n        children: !isLoading && t(\"common:dialog.save\")\n      })]\n    })]\n  });\n};\n\nexport default EditSingleForm;","map":null,"metadata":{},"sourceType":"module"}