{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Fragment } from \"react\";\nimport { END } from \"redux-saga\";\nimport { useTranslation } from \"next-i18next\";\nimport { serverSideTranslations } from \"next-i18next/serverSideTranslations\";\nimport Main, { getAllBasicAPIForPage } from \"@layouts/Main\";\nimport TabLayout from \"@layouts/TabJob\";\nimport { PATH } from \"@routes\";\nimport { withAuth } from \"@common/HOC/withAuth\";\nimport { wrapper } from \"@redux/store\";\nimport { getAllMostKeyword } from \"@redux/actions/recruitment\";\nimport Meta from \"@components/Meta\";\nimport ChangePassword from \"@containers/JobSeeker/change-password\";\nimport { FindCompanyAPICaller } from \"@containers/CompanyResult/helper\";\n\nconst Page = props => {\n  const {\n    t\n  } = useTranslation([\"common\"]);\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: t(\"header.change-password\"),\n      routeName: PATH.JOB_MANAGEMENT_CHANGE_PASSWORD\n    }), /*#__PURE__*/_jsx(Main, {\n      children: /*#__PURE__*/_jsx(TabLayout, {\n        active: \"CHANGE_PASSWORD\",\n        children: /*#__PURE__*/_jsx(ChangePassword, {})\n      })\n    })]\n  });\n};\n\nexport default withAuth(Page);\nexport const getStaticProps = wrapper.getStaticProps(async context => {\n  const {\n    locale = \"vi\",\n    store: {\n      dispatch,\n      sagaTask\n    }\n  } = context;\n  const apiCaller = new FindCompanyAPICaller({\n    dispatch\n  });\n  await apiCaller.getProvinces();\n  getAllBasicAPIForPage(locale, dispatch);\n  dispatch(getAllMostKeyword());\n  dispatch(END);\n  await sagaTask.toPromise();\n  return {\n    props: _objectSpread({\n      locale\n    }, await serverSideTranslations(locale)),\n    revalidate: 3600\n  };\n});","map":null,"metadata":{},"sourceType":"module"}