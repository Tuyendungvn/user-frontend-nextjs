{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport { useRouter } from \"next/router\";\nimport { useRedirect } from \"@common/hooks/useRedirect\";\nimport { cleanObject, formatParams } from \"@common/functions\";\nimport { PATH } from \"@routes\";\nimport { getAllCompany } from \"@redux/actions/company\";\nimport Search from \"@components/SearchCompany\";\nimport Pagination from \"@components/Pagination\";\nimport ErrorBoundary from \"@components/ErrorBoundary\";\nimport NotFoundAlert from \"@designs/NotFoundAlert\";\nimport CompanyItem from \"@designs/Card/CompanyItem\";\nimport { CardWrapper, Container, CountNumber, ListCardContainer, ResultCount, Wrapper } from \"./styles\";\nconst SIZE_PER_PAGE = 12;\n\nconst CompanyResult = props => {\n  const {\n    t\n  } = useTranslation([\"company\"]);\n  const dispatch = useDispatch();\n  const redirect = useRedirect();\n  const fullQuery = useRouter().query;\n  const {\n    k: _keywords,\n    p: _province,\n    page = 1\n  } = fullQuery;\n  const keywords = formatParams(decodeURIComponent(_keywords || \"\"));\n  const province = formatParams(decodeURIComponent(_province || \"\"));\n  const {\n    allCompany: {\n      results: allCompany = [],\n      totalCount = 0,\n      loading\n    }\n  } = useSelector(state => state.company);\n  useEffect(() => {\n    if (fullQuery) {\n      getCompaniesAPI();\n    }\n  }, [fullQuery]);\n\n  const getCompaniesAPI = () => {\n    const payload = {\n      keyword: keywords,\n      filterCompany: {\n        slugProvince: province\n      },\n      page: Number(page) - 1,\n      size: SIZE_PER_PAGE\n    };\n    dispatch(getAllCompany(cleanObject(payload)));\n  };\n\n  const handlePageChange = newPage => {\n    redirect(PATH.JOB, fullQuery, {\n      page: newPage + 1\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(Wrapper, {\n    children: [/*#__PURE__*/_jsx(Search, {}), /*#__PURE__*/_jsxs(Container, {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxs(ResultCount, {\n        children: [/*#__PURE__*/_jsx(CountNumber, {\n          children: totalCount\n        }), \" \", t(\"found\")]\n      }), /*#__PURE__*/_jsxs(ErrorBoundary, {\n        children: [(!loading && !totalCount || totalCount == 0) && /*#__PURE__*/_jsx(NotFoundAlert, {\n          isCompany: true\n        }), /*#__PURE__*/_jsx(ListCardContainer, {\n          children: allCompany.map((company, index) => /*#__PURE__*/_jsx(CardWrapper, {\n            children: /*#__PURE__*/_jsx(CompanyItem, {\n              company: company\n            }, index)\n          }))\n        })]\n      }), totalCount > 0 && /*#__PURE__*/_jsx(Pagination, {\n        page: Number(page) - 1,\n        sizePerPage: SIZE_PER_PAGE,\n        totalSize: totalCount,\n        onPageChange: handlePageChange,\n        className: \"mt-2\"\n      })]\n    })]\n  });\n};\n\nexport default CompanyResult;","map":null,"metadata":{},"sourceType":"module"}