{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport dayjs from \"dayjs\";\nimport { useTranslation } from \"react-i18next\";\nimport { isEmpty } from \"lodash\";\nimport { renderLocation } from \"@common/functions\";\nimport { removeSavedRecruitment, setAppliedRecruitment } from \"@redux/actions/recruitment\";\nimport Link from \"@designs/Link\";\nimport { resetAction } from \"@redux/actions/common\";\nimport { refreshToken } from \"@redux/actions/auth\";\nimport { PATH } from \"@routes/index\";\nimport { ButtonDelete, ButtonApplied, CardContainer, Content, LeftCard, RightCard, Text, Title } from \"./style\";\n\nvar CardJobSaved = function CardJobSaved(_ref) {\n  var recruitment = _ref.recruitment;\n\n  var _useTranslation = useTranslation([\"common\"]),\n      t = _useTranslation.t;\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      user = _useSelector.user;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.auth;\n  }),\n      currentUser = _useSelector2.currentUser;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.actions;\n  }),\n      actionSuccess = _useSelector3.actionSuccess;\n\n  var _useState = useState(),\n      isApplied = _useState[0],\n      setIsApplied = _useState[1];\n\n  var level = recruitment.level,\n      location = recruitment.location,\n      createdAt = recruitment.createdAt,\n      name = recruitment.name,\n      _id = recruitment._id,\n      slug = recruitment.slug;\n  var userInfo = currentUser === null || currentUser === void 0 ? void 0 : currentUser.userInfo;\n  var locationArray = location === null || location === void 0 ? void 0 : location.map(function (item) {\n    var _item$province;\n\n    return (_item$province = item.province) === null || _item$province === void 0 ? void 0 : _item$province.name;\n  });\n  var locationString = renderLocation(locationArray);\n  useEffect(function () {\n    if (!isEmpty(user)) {\n      checkApplied();\n    }\n  }, [user]);\n  useEffect(function () {\n    if (actionSuccess) {\n      dispatch(resetAction());\n      dispatch(refreshToken());\n      checkApplied();\n    }\n  }, [actionSuccess]);\n\n  var setAppliedRecruitmentAPI = function setAppliedRecruitmentAPI(userId, recruitmentId) {\n    var payload = {\n      userId: userId,\n      recruitmentId: recruitmentId\n    };\n    dispatch(setAppliedRecruitment(payload));\n  };\n\n  var handleDelete = function handleDelete() {\n    dispatch(removeSavedRecruitment({\n      userId: userInfo === null || userInfo === void 0 ? void 0 : userInfo._id,\n      recruitmentId: _id\n    }));\n  };\n\n  var handleApply = function handleApply() {\n    setAppliedRecruitmentAPI(userInfo === null || userInfo === void 0 ? void 0 : userInfo._id, _id);\n  };\n\n  var checkApplied = function checkApplied() {\n    var _user$appliedRecruitm;\n\n    var listAppliedId = user === null || user === void 0 ? void 0 : (_user$appliedRecruitm = user.appliedRecruitment) === null || _user$appliedRecruitm === void 0 ? void 0 : _user$appliedRecruitm.map(function (item) {\n      var _item$recruitment;\n\n      return item === null || item === void 0 ? void 0 : (_item$recruitment = item.recruitment) === null || _item$recruitment === void 0 ? void 0 : _item$recruitment._id;\n    });\n\n    if (listAppliedId !== null && listAppliedId !== void 0 && listAppliedId.includes(_id)) {\n      setIsApplied(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(CardContainer, {\n    children: [/*#__PURE__*/_jsxs(LeftCard, {\n      children: [/*#__PURE__*/_jsx(Link, {\n        routeName: PATH.JOB_DETAIL,\n        params: {\n          slug: slug\n        },\n        children: /*#__PURE__*/_jsx(Title, {\n          children: name\n        })\n      }), /*#__PURE__*/_jsxs(Content, {\n        children: [/*#__PURE__*/_jsx(Text, {\n          children: level === null || level === void 0 ? void 0 : level.name\n        }), locationString ? /*#__PURE__*/_jsx(Text, {\n          children: locationString\n        }) : null, /*#__PURE__*/_jsx(Text, {\n          children: dayjs(createdAt).format(\"DD/MM/YYYY\")\n        })]\n      })]\n    }), /*#__PURE__*/_jsxs(RightCard, {\n      children: [/*#__PURE__*/_jsx(ButtonApplied, {\n        onClick: handleApply,\n        style: {\n          opacity: isApplied ? 0.5 : 1,\n          pointerEvents: isApplied ? \"none\" : \"initial\"\n        },\n        children: isApplied ? t(\"applied\") : t(\"apply\")\n      }), /*#__PURE__*/_jsx(ButtonDelete, {\n        onClick: handleDelete,\n        children: t(\"delete\")\n      })]\n    })]\n  });\n};\n\nexport default CardJobSaved;","map":null,"metadata":{},"sourceType":"module"}