{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Tab } from \"@headlessui/react\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport JobApplied from \"./components/JobApplied\";\nimport JobSaved from \"./components/JobSaved\";\nimport RelatedJob from \"@components/RelatedJob\";\nimport { getUserCookies } from \"@common/utils/auth\";\nimport { Container, TabItem, Title, WrapperBG } from \"./style\";\nimport { getUserProfile } from \"@redux/actions/user\";\nimport { getAllRecruitment, getBestRecruitment } from \"@redux/actions/recruitment\";\nimport { resetAction } from \"@redux/actions/common\";\n\nconst MyJob = () => {\n  const {\n    t\n  } = useTranslation([\"job-management\"]);\n  const dispatch = useDispatch();\n  const {\n    bestRecruitment: {\n      results: bestRecruitment = []\n    }\n  } = useSelector(state => state.recruitment);\n  const {\n    user\n  } = useSelector(state => state.user);\n  const {\n    actionSuccess\n  } = useSelector(state => state.actions);\n  const {\n    appliedRecruitment,\n    savedRecruitment\n  } = user;\n  useEffect(() => {\n    getUserProfileAPI();\n    getBestRecruitmentAPI();\n    geAllRecruitmentAPI();\n  }, []);\n  useEffect(() => {\n    if (actionSuccess) {\n      dispatch(resetAction());\n      getUserProfileAPI();\n    }\n  }, [actionSuccess]);\n\n  const getUserProfileAPI = () => {\n    var _getUserCookies, _getUserCookies$userI;\n\n    const payload = {\n      id: (_getUserCookies = getUserCookies()) === null || _getUserCookies === void 0 ? void 0 : (_getUserCookies$userI = _getUserCookies.userInfo) === null || _getUserCookies$userI === void 0 ? void 0 : _getUserCookies$userI._id\n    };\n    dispatch(getUserProfile(payload));\n  };\n\n  const geAllRecruitmentAPI = () => {\n    dispatch(getAllRecruitment({}));\n  };\n\n  const getBestRecruitmentAPI = () => {\n    const payload = {\n      size: 6\n    };\n    dispatch(getBestRecruitment(payload));\n  };\n\n  const categories = [{\n    name: t(\"saved-jobs\"),\n    components: /*#__PURE__*/_jsx(JobSaved, {\n      savedRecruitment: savedRecruitment\n    })\n  }, {\n    name: t(\"applied-job\"),\n    components: /*#__PURE__*/_jsx(JobApplied, {\n      appliedRecruitment: appliedRecruitment\n    })\n  }];\n  return /*#__PURE__*/_jsxs(Container, {\n    children: [/*#__PURE__*/_jsxs(WrapperBG, {\n      children: [/*#__PURE__*/_jsx(Title, {\n        children: t(\"my-job\")\n      }), /*#__PURE__*/_jsxs(Tab.Group, {\n        children: [/*#__PURE__*/_jsx(Tab.List, {\n          className: \"flex items-center w-full text-black\",\n          children: categories === null || categories === void 0 ? void 0 : categories.map((category, index) => /*#__PURE__*/_jsx(Tab, {\n            as: Fragment,\n            children: ({\n              selected\n            }) => /*#__PURE__*/_jsx(TabItem, {\n              selected: selected,\n              children: /*#__PURE__*/_jsx(\"div\", {\n                children: category.name\n              })\n            })\n          }, index))\n        }), /*#__PURE__*/_jsx(Tab.Panels, {\n          children: categories === null || categories === void 0 ? void 0 : categories.map((category, index) => /*#__PURE__*/_jsx(Tab.Panel, {\n            children: category.components\n          }, index))\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(RelatedJob, {\n      bestRecruitment: bestRecruitment,\n      title: t(\"favorite-job\")\n    })]\n  });\n};\n\nexport default MyJob;","map":null,"metadata":{},"sourceType":"module"}