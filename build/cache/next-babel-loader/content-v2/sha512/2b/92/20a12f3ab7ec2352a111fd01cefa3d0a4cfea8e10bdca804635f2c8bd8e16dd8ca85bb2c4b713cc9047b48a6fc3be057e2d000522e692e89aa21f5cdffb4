{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * This is component which will prevent your app is cracked when something wrong\n * with typescript.\n * This component is similar with try-catch wrapper\n */\nimport React, { Component, isValidElement } from \"react\";\nimport { ErrorBoundaryContainer, Title, Details } from \"./styles\";\n\nvar ErrorBoundary = /*#__PURE__*/function (_Component) {\n  _inherits(ErrorBoundary, _Component);\n\n  var _super = _createSuper(ErrorBoundary);\n\n  function ErrorBoundary(props) {\n    var _this;\n\n    _classCallCheck(this, ErrorBoundary);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      error: null,\n      errorInfo: null\n    };\n    return _this;\n  }\n\n  _createClass(ErrorBoundary, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, errorInfo) {\n      this.setState({\n        error: error,\n        errorInfo: errorInfo\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.errorInfo) {\n        // Error path\n        return /*#__PURE__*/isValidElement(this.props.fallback) ? this.props.fallback : /*#__PURE__*/_jsxs(ErrorBoundaryContainer, {\n          children: [/*#__PURE__*/_jsx(Title, {\n            children: \"C\\xF3 l\\u1ED7i x\\u1EA9y ra\"\n          }), /*#__PURE__*/_jsxs(Details, {\n            children: [this.state.error && this.state.error.toString(), /*#__PURE__*/_jsx(\"br\", {}), this.state.errorInfo.componentStack]\n          })]\n        });\n      } // Normally, just render children\n\n\n      return this.props.children;\n    }\n  }]);\n\n  return ErrorBoundary;\n}(Component);\n\nexport { ErrorBoundary as default };","map":null,"metadata":{},"sourceType":"module"}