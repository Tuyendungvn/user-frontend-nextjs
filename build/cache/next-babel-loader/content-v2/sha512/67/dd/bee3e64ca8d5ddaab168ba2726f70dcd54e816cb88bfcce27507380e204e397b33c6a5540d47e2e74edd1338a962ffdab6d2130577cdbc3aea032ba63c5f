{"ast":null,"code":"import { getProvincesSuccess } from \"@redux/actions/location\";\nimport { getAllRecruitment } from \"@redux/actions/recruitment\";\nimport { getAdsJobPageSuccess } from \"@redux/actions/ads\";\nimport { getProvinces } from \"@services/location\";\nimport { getAdsByLocation } from \"@services/ads\";\nimport { ADS_LOCATION } from \"@constants/ads\";\nimport { getAllCategoryLevel2 } from \"@redux/actions/category\";\nexport const getAllCategoryLv2API = page => {\n  const payload = {\n    page\n  };\n  return getAllCategoryLevel2(payload);\n};\nexport class FindJobAPICaller {\n  constructor(props) {\n    this.props = props;\n  }\n\n  async getProvinceAndSelect() {\n    const provinces = await getProvinceAPI();\n\n    if (provinces) {\n      this.props.dispatch(getProvincesSuccess(provinces));\n    }\n  }\n\n  async filterAllJobAPI() {\n    const {\n      dispatch\n    } = this.props;\n    dispatch(getAllRecruitment({\n      filterRecruitment: {\n        sortType: \"latest\"\n      },\n      page: 0\n    }));\n  }\n\n}\n\nconst getProvinceAPI = async () => {\n  try {\n    const response = await getProvinces();\n    const {\n      getProvinces: results\n    } = response === null || response === void 0 ? void 0 : response.data;\n    return (results === null || results === void 0 ? void 0 : results.provinces) || [];\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}; //API get ads\n\n\nexport class AdsJobAPICaller {\n  constructor(props) {\n    this.props = props;\n  }\n\n  async getAds1() {\n    const ads = await getAds1JobPage();\n\n    if (ads) {\n      this.props.dispatch(getAdsJobPageSuccess(ads));\n    }\n  }\n\n  async getAds2() {\n    const ads = await getAds2JobPage();\n\n    if (ads) {\n      this.props.dispatch(getAdsJobPageSuccess(ads));\n    }\n  }\n\n  async getAds3() {\n    const ads = await getAds3JobPage();\n\n    if (ads) {\n      this.props.dispatch(getAdsJobPageSuccess(ads));\n    }\n  }\n\n  async getAds4() {\n    const ads = await getAds4JobPage();\n\n    if (ads) {\n      this.props.dispatch(getAdsJobPageSuccess(ads));\n    }\n  }\n\n  async getAds5() {\n    const ads = await getAds5JobPage();\n\n    if (ads) {\n      this.props.dispatch(getAdsJobPageSuccess(ads));\n    }\n  }\n\n}\n\nconst getAds1JobPage = async () => {\n  try {\n    const response = await getAdsByLocation({\n      displayLocation: ADS_LOCATION.FIND_JOB_1\n    });\n    const {\n      getAdsAllByLocation: results\n    } = response === null || response === void 0 ? void 0 : response.data;\n    return results || [];\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n};\n\nconst getAds2JobPage = async () => {\n  try {\n    const response = await getAdsByLocation({\n      displayLocation: ADS_LOCATION.FIND_JOB_2\n    });\n    const {\n      getAdsAllByLocation: results\n    } = response === null || response === void 0 ? void 0 : response.data;\n    return results || [];\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n};\n\nconst getAds3JobPage = async () => {\n  try {\n    const response = await getAdsByLocation({\n      displayLocation: ADS_LOCATION.FIND_JOB_3\n    });\n    const {\n      getAdsAllByLocation: results\n    } = response === null || response === void 0 ? void 0 : response.data;\n    return results || [];\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n};\n\nconst getAds4JobPage = async () => {\n  try {\n    const response = await getAdsByLocation({\n      displayLocation: ADS_LOCATION.FIND_JOB_4\n    });\n    const {\n      getAdsAllByLocation: results\n    } = response === null || response === void 0 ? void 0 : response.data;\n    return results || [];\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n};\n\nconst getAds5JobPage = async () => {\n  try {\n    const response = await getAdsByLocation({\n      displayLocation: ADS_LOCATION.FIND_JOB_5\n    });\n    const {\n      getAdsAllByLocation: results\n    } = response === null || response === void 0 ? void 0 : response.data;\n    return results || [];\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n};","map":null,"metadata":{},"sourceType":"module"}