{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useTranslation } from \"next-i18next\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Dialog from \"@components/Dialog\";\nimport Button from \"@designs/Button\";\nimport Spinner from \"@designs/icons/Spinner\";\nimport { SVG } from \"@designs/SVG\";\nimport { updateRecord, createRecord } from \"@redux/actions/record\";\nimport { setLoading } from \"@redux/actions/common\";\nimport { Container, DialogButton, Wrapper, Content, Text, Title, ButtonText, CVDescription, Input } from \"./styles\";\n\nvar AddCVDialog = function AddCVDialog(props) {\n  var _useTranslation = useTranslation([\"job-management\", \"common\"]),\n      t = _useTranslation.t;\n\n  var ButtonMenu = props.ButtonMenu,\n      className = props.className,\n      acceptedFiles = props.acceptedFiles,\n      getInputProps = props.getInputProps,\n      getRootProps = props.getRootProps,\n      recordId = props.recordId,\n      userId = props.userId;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.actions;\n  }),\n      isLoading = _useSelector.isLoading;\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var _useState2 = useState(null),\n      urlCV = _useState2[0],\n      setURLCV = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      fileNameCV = _useState3[0],\n      setFileNameCV = _useState3[1];\n\n  useEffect(function () {\n    var _acceptedFiles$;\n\n    setURLCV(acceptedFiles[0]);\n    setFileNameCV((_acceptedFiles$ = acceptedFiles[0]) === null || _acceptedFiles$ === void 0 ? void 0 : _acceptedFiles$.name);\n  }, [acceptedFiles]);\n  useEffect(function () {\n    if (!!urlCV && !!userId && fileNameCV !== \"\") {\n      if (!recordId) {\n        var payload = {\n          recordCreateInput: {\n            user: userId,\n            urlCV: urlCV,\n            fileNameCV: fileNameCV\n          }\n        };\n        handleCreate(payload);\n      }\n\n      if (!!recordId) {\n        var _payload = {\n          id: recordId,\n          recordUpdateInput: {\n            fileNameCV: fileNameCV,\n            urlCV: urlCV\n          }\n        };\n        handleUpdate(_payload);\n      }\n    }\n  }, [fileNameCV]);\n\n  var handleCreate = function handleCreate(payload) {\n    dispatch(setLoading(true));\n\n    try {\n      dispatch(createRecord(payload));\n    } catch (err) {}\n  };\n\n  var handleUpdate = function handleUpdate(payload) {\n    dispatch(updateRecord(payload));\n    setOpen(false);\n  };\n\n  var handleCloseDialog = function handleCloseDialog() {\n    setOpen(false);\n  };\n\n  var handleOpenDialog = function handleOpenDialog() {\n    setOpen(true);\n  };\n\n  var files = acceptedFiles.map(function (file) {\n    return /*#__PURE__*/_jsx(CVDescription, {\n      children: file.path\n    }, file.path);\n  });\n  return /*#__PURE__*/_jsxs(Container, {\n    className: className,\n    children: [/*#__PURE__*/_jsx(DialogButton, {\n      onClick: handleOpenDialog,\n      children: ButtonMenu\n    }), /*#__PURE__*/_jsx(Dialog, {\n      isOpen: open,\n      onClose: handleCloseDialog,\n      className: \"z-50 rounded-none w-max\",\n      children: /*#__PURE__*/_jsxs(Wrapper, _objectSpread(_objectSpread({}, getRootProps({\n        className: \"dropzone\"\n      })), {}, {\n        children: [/*#__PURE__*/_jsx(Input, _objectSpread({}, getInputProps())), /*#__PURE__*/_jsxs(Content, {\n          children: [isLoading && /*#__PURE__*/_jsx(Spinner, {\n            className: \"text-black\"\n          }), !isLoading && /*#__PURE__*/_jsx(SVG, {\n            name: \"job-management/folder-add-icon\"\n          }), /*#__PURE__*/_jsx(Title, {\n            children: t(\"personal-info.cv.drag-and-drop\")\n          }), acceptedFiles.length > 0 ? files : /*#__PURE__*/_jsx(Button, {\n            className: \"w-full border border-solid phone:w-1/2 border-primary\",\n            children: /*#__PURE__*/_jsx(ButtonText, {\n              children: t(\"personal-info.cv.choose-cv\")\n            })\n          }), /*#__PURE__*/_jsx(Text, {\n            children: t(\"personal-info.cv.cv-note\")\n          })]\n        })]\n      }))\n    })]\n  });\n};\n\nexport default AddCVDialog;","map":null,"metadata":{},"sourceType":"module"}