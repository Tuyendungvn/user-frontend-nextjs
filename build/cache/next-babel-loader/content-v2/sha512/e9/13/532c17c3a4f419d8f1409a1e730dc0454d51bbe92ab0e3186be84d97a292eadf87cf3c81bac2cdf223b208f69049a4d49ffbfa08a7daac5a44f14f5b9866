{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"next-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Input from \"@designs/Input\";\nimport Dialog from \"@components/Dialog\";\nimport { Title, Container, ScheduleInterviewBox, ScheduleInterviewDialogContainer, ButtonWrapper } from \"./styles\";\nimport { cancelTheScheduleInterview, confirmTheScheduleInterview, getAllScheduleInterview } from \"@redux/actions/scheduleInterview\";\nimport { actionSuccess } from \"@redux/actions/common\";\nimport { formatDate, formatDateWithTime } from \"@common/functions/format/formatDate\";\nimport Button from \"@designs/Button\";\n\nvar ScheduleInterviewDialog = function ScheduleInterviewDialog(props) {\n  var _scheduleView$receive, _currentUser$userInfo2;\n\n  var isOpen = props.isOpen,\n      onClose = props.onClose,\n      scheduleInterviewId = props.scheduleInterviewId;\n\n  var _useTranslation = useTranslation([\"profile\", \"common\"]),\n      t = _useTranslation.t;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var _useState2 = useState(),\n      isConfirm = _useState2[0],\n      setIsConfirm = _useState2[1];\n\n  var _useState3 = useState(),\n      isExpired = _useState3[0],\n      setIsExpired = _useState3[1];\n\n  var _useState4 = useState(),\n      isRefused = _useState4[0],\n      setIsRefused = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      currentUser = _useSelector.currentUser;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.recruitment;\n  }),\n      recruitment = _useSelector2.recruitment;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.scheduleInterview;\n  }),\n      _useSelector3$allSche = _useSelector3.allScheduleInterview.results,\n      listScheduled = _useSelector3$allSche === void 0 ? [] : _useSelector3$allSche;\n\n  var scheduleView = listScheduled.find(function (element) {\n    return (element === null || element === void 0 ? void 0 : element._id) === scheduleInterviewId;\n  });\n  useEffect(function () {\n    if ((scheduleView === null || scheduleView === void 0 ? void 0 : scheduleView.isConfirmFromReceiver) === true) {\n      setIsConfirm(true);\n    }\n\n    if ((scheduleView === null || scheduleView === void 0 ? void 0 : scheduleView.status) === \"canceled\") {\n      setIsRefused(true);\n    }\n\n    if ((scheduleView === null || scheduleView === void 0 ? void 0 : scheduleView.status) === \"expired\") {\n      setIsExpired(true);\n    }\n  }, [scheduleView]);\n  useEffect(function () {\n    if (actionSuccess) {\n      getScheduledInterview();\n      open && setOpen(false);\n    }\n  }, [actionSuccess]);\n\n  var getScheduledInterview = function getScheduledInterview() {\n    var _currentUser$userInfo;\n\n    var payload = {\n      filterScheduleInterview: {\n        receiver: currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$userInfo = currentUser.userInfo) === null || _currentUser$userInfo === void 0 ? void 0 : _currentUser$userInfo._id,\n        recruitment: recruitment === null || recruitment === void 0 ? void 0 : recruitment._id\n      }\n    };\n    dispatch(getAllScheduleInterview(payload));\n  };\n\n  var confirmTheScheduleInterviewAPI = function confirmTheScheduleInterviewAPI(scheduleInterviewId) {\n    var payload = {\n      id: scheduleInterviewId\n    };\n    dispatch(confirmTheScheduleInterview(payload));\n  };\n\n  var cancelTheScheduleInterviewAPI = function cancelTheScheduleInterviewAPI(scheduleInterviewId) {\n    var payload = {\n      id: scheduleInterviewId\n    };\n    dispatch(cancelTheScheduleInterview(payload));\n  };\n\n  var handleConfirm = function handleConfirm() {\n    confirmTheScheduleInterviewAPI(scheduleInterviewId);\n    onClose();\n  };\n\n  var handleRefuse = function handleRefuse() {\n    cancelTheScheduleInterviewAPI(scheduleInterviewId);\n    onClose();\n  };\n\n  return /*#__PURE__*/_jsx(ScheduleInterviewDialogContainer, {\n    children: /*#__PURE__*/_jsx(Dialog, {\n      isOpen: isOpen,\n      onClose: onClose,\n      className: \"z-50 rounded-none relative\",\n      children: /*#__PURE__*/_jsxs(Container, {\n        children: [/*#__PURE__*/_jsx(Title, {\n          children: t(\"common:schedule-interview.schedule\")\n        }), /*#__PURE__*/_jsx(ScheduleInterviewBox, {\n          children: listScheduled && /*#__PURE__*/_jsx(\"div\", {\n            className: \"flex flex-col gap-y-2 mb-4\",\n            children: (scheduleView === null || scheduleView === void 0 ? void 0 : (_scheduleView$receive = scheduleView.receiver) === null || _scheduleView$receive === void 0 ? void 0 : _scheduleView$receive._id) === (currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$userInfo2 = currentUser.userInfo) === null || _currentUser$userInfo2 === void 0 ? void 0 : _currentUser$userInfo2._id) && /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(Input, {\n                label: t(\"common:schedule-interview.interview-position\"),\n                value: scheduleView === null || scheduleView === void 0 ? void 0 : scheduleView.positionInterview,\n                disabled: true\n              }), /*#__PURE__*/_jsx(Input, {\n                label: t(\"common:schedule-interview.interview-method\"),\n                value: scheduleView === null || scheduleView === void 0 ? void 0 : scheduleView.scheduleType,\n                disabled: true\n              }), /*#__PURE__*/_jsx(Input, {\n                label: t(\"common:schedule-interview.interview-date\"),\n                value: formatDate(scheduleView === null || scheduleView === void 0 ? void 0 : scheduleView.scheduleTime),\n                disabled: true\n              }), /*#__PURE__*/_jsx(Input, {\n                label: t(\"common:schedule-interview.interview-time\"),\n                value: formatDateWithTime(scheduleView === null || scheduleView === void 0 ? void 0 : scheduleView.scheduleTime),\n                disabled: true\n              }), /*#__PURE__*/_jsx(Input, {\n                label: t(\"common:schedule-interview.interview-location\"),\n                value: scheduleView === null || scheduleView === void 0 ? void 0 : scheduleView.scheduleLocation,\n                disabled: true\n              }), /*#__PURE__*/_jsx(Input, {\n                label: t(\"common:schedule-interview.interviewer\"),\n                value: scheduleView === null || scheduleView === void 0 ? void 0 : scheduleView.interviewerName,\n                disabled: true\n              }), /*#__PURE__*/_jsx(Input, {\n                label: t(\"common:schedule-interview.phone-number\"),\n                value: scheduleView === null || scheduleView === void 0 ? void 0 : scheduleView.interviewerPhone,\n                disabled: true\n              }), /*#__PURE__*/_jsx(Input, {\n                label: t(\"common:schedule-interview.email\"),\n                value: scheduleView === null || scheduleView === void 0 ? void 0 : scheduleView.interviewerEmail,\n                disabled: true\n              }), isRefused ? /*#__PURE__*/_jsx(ButtonWrapper, {\n                children: /*#__PURE__*/_jsx(Button, {\n                  primary: true,\n                  className: \"px-2\",\n                  style: {\n                    opacity: 0.5,\n                    pointerEvents: \"none\"\n                  },\n                  children: \"L\\u1ECBch ph\\u1ECFng v\\u1EA5n \\u0111\\xE3 b\\u1ECB h\\u1EE7y\"\n                })\n              }) : null, isExpired ? /*#__PURE__*/_jsx(ButtonWrapper, {\n                children: /*#__PURE__*/_jsx(Button, {\n                  primary: true,\n                  className: \"px-2\",\n                  style: {\n                    opacity: 0.5,\n                    pointerEvents: \"none\"\n                  },\n                  children: \"L\\u1ECBch ph\\u1ECFng v\\u1EA5n \\u0111\\xE3 h\\u1EBFt h\\u1EA1n\"\n                })\n              }) : null, !isExpired && !isRefused && /*#__PURE__*/_jsxs(ButtonWrapper, {\n                children: [/*#__PURE__*/_jsx(Button, {\n                  type: \"submit\",\n                  onClick: handleRefuse,\n                  className: \"w-15 border border-solid border-primary\",\n                  children: t(\"common:schedule-interview.refuse\")\n                }), /*#__PURE__*/_jsx(Button, {\n                  primary: true,\n                  type: \"submit\",\n                  className: \"w-15\",\n                  onClick: handleConfirm,\n                  style: {\n                    opacity: isConfirm ? 0.5 : 1,\n                    pointerEvents: isConfirm ? \"none\" : \"initial\"\n                  },\n                  children: !isConfirm ? t(\"common:schedule-interview.confirm\") : t(\"common:schedule-interview.confirmed\")\n                })]\n              })]\n            })\n          })\n        })]\n      })\n    })\n  });\n};\n\nexport default ScheduleInterviewDialog;","map":null,"metadata":{},"sourceType":"module"}