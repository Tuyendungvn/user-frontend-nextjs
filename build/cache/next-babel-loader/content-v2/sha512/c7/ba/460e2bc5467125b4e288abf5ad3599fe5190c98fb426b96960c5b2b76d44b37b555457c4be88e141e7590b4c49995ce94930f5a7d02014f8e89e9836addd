{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useDispatch } from \"react-redux\";\nimport SlickSlider from \"@designs/SlickSlider\";\nimport { PATH } from \"@routes\";\nimport { setSeenRecruitment } from \"@redux/actions/recruitment\";\nimport useAuth from \"@common/hooks/useAuth\";\nimport { Card, CardLayoutContainer, Link, Title, LinkWrapper } from \"./styles\";\n\nvar CardLayout = function CardLayout(props) {\n  var _accountInfo$userInfo;\n\n  var title = props.title,\n      data = props.data,\n      loading = props.loading;\n  var dispatch = useDispatch();\n\n  var renderLocation = function renderLocation(location) {\n    var listProvince = location === null || location === void 0 ? void 0 : location.map(function (location) {\n      var _location$province;\n\n      return location === null || location === void 0 ? void 0 : (_location$province = location.province) === null || _location$province === void 0 ? void 0 : _location$province.name;\n    });\n    return listProvince.join(\" | \");\n  };\n\n  var custom = {\n    dots: true,\n    infinite: true,\n    slidesToScroll: 1,\n    autoplay: true,\n    speed: 500,\n    slidesPerRow: 2,\n    rows: 2,\n    appendDots: function appendDots(dots) {\n      return /*#__PURE__*/_jsx(\"ul\", {\n        children: dots\n      });\n    },\n    customPaging: function customPaging(i) {\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: \"ft-slick__dots--custom\"\n      });\n    },\n    responsive: [{\n      breakpoint: 769,\n      settings: {\n        slidesPerRow: 1,\n        rows: 2\n      }\n    }]\n  };\n\n  var _useAuth = useAuth(),\n      accountInfo = _useAuth.accountInfo;\n\n  var userId = accountInfo === null || accountInfo === void 0 ? void 0 : (_accountInfo$userInfo = accountInfo.userInfo) === null || _accountInfo$userInfo === void 0 ? void 0 : _accountInfo$userInfo._id;\n\n  var handleClickJob = function handleClickJob(recruitmentId) {\n    if (userId === \"\" || !userId) return;\n    dispatch(setSeenRecruitment({\n      userId: userId,\n      recruitmentId: recruitmentId\n    }));\n  };\n\n  return !loading && (data === null || data === void 0 ? void 0 : data.length) > 0 && /*#__PURE__*/_jsxs(CardLayoutContainer, {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsx(Title, {\n      children: title\n    }), /*#__PURE__*/_jsx(SlickSlider, {\n      custom: custom,\n      className: \"slider-layout\",\n      children: data === null || data === void 0 ? void 0 : data.map(function (item, index) {\n        var _item$companyLogo, _item$companyLogo2;\n\n        return /*#__PURE__*/_jsx(Card.Container, {\n          children: /*#__PURE__*/_jsx(LinkWrapper, {\n            onClick: function onClick() {\n              return handleClickJob(item === null || item === void 0 ? void 0 : item._id);\n            },\n            children: /*#__PURE__*/_jsxs(Link, {\n              routeName: PATH.JOB_DETAIL,\n              params: {\n                slug: item === null || item === void 0 ? void 0 : item.slug\n              },\n              children: [/*#__PURE__*/_jsx(Card.ContainerLogo, {\n                children: /*#__PURE__*/_jsx(Card.Logo, {\n                  children: /*#__PURE__*/_jsx(Card.Img, {\n                    src: (item === null || item === void 0 ? void 0 : (_item$companyLogo = item.companyLogo) === null || _item$companyLogo === void 0 ? void 0 : _item$companyLogo.small) || (item === null || item === void 0 ? void 0 : (_item$companyLogo2 = item.companyLogo) === null || _item$companyLogo2 === void 0 ? void 0 : _item$companyLogo2[\"default\"]) || \"/img/skeleton/default-small.jpg\"\n                  })\n                })\n              }), /*#__PURE__*/_jsxs(Card.Text, {\n                children: [/*#__PURE__*/_jsx(Card.Name, {\n                  children: item === null || item === void 0 ? void 0 : item.name\n                }), /*#__PURE__*/_jsx(Card.Company, {\n                  children: item === null || item === void 0 ? void 0 : item.companyName\n                }), /*#__PURE__*/_jsx(Card.Province, {\n                  children: renderLocation(item === null || item === void 0 ? void 0 : item.location)\n                })]\n              })]\n            })\n          })\n        }, \"card-item-\".concat(index));\n      })\n    })]\n  });\n};\n\nexport default CardLayout;","map":null,"metadata":{},"sourceType":"module"}