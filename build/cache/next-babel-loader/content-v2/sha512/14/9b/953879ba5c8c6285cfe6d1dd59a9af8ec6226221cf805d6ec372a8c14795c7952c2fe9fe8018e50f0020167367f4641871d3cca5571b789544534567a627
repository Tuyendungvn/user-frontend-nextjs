{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getBestRecruitment } from \"@redux/actions/recruitment\";\nimport { getEvaluateByUser } from \"@redux/actions/requestReview\";\nimport RelatedJob from \"@components/RelatedJob\";\nimport RequestEvaluated from \"./components/RequestEvaluated\";\nimport { getUserCookies } from \"@common/utils/auth\";\nimport { Container } from \"./style\";\n\nconst Evaluated = () => {\n  const {\n    t\n  } = useTranslation([\"job-management\"]);\n  const dispatch = useDispatch();\n  const {\n    bestRecruitment: {\n      results: bestRecruitment\n    }\n  } = useSelector(state => state.recruitment);\n  const {\n    listEvaluate\n  } = useSelector(state => state.requestReview);\n  useEffect(() => {\n    getBestRecruitmentAPI();\n    getEvaluateAPI();\n  }, []);\n\n  const getEvaluateAPI = () => {\n    var _getUserCookies, _getUserCookies$userI;\n\n    const payload = {\n      userId: (_getUserCookies = getUserCookies()) === null || _getUserCookies === void 0 ? void 0 : (_getUserCookies$userI = _getUserCookies.userInfo) === null || _getUserCookies$userI === void 0 ? void 0 : _getUserCookies$userI._id\n    };\n    dispatch(getEvaluateByUser(payload));\n  };\n\n  const getBestRecruitmentAPI = () => {\n    const payload = {\n      size: 6\n    };\n    dispatch(getBestRecruitment(payload));\n  };\n\n  return /*#__PURE__*/_jsxs(Container, {\n    children: [/*#__PURE__*/_jsx(RequestEvaluated, {\n      listEvaluate: listEvaluate\n    }), /*#__PURE__*/_jsx(RelatedJob, {\n      bestRecruitment: bestRecruitment,\n      title: t(\"favorite-job\")\n    })]\n  });\n};\n\nexport default Evaluated;","map":null,"metadata":{},"sourceType":"module"}