{"ast":null,"code":"import { graphQLCommon } from \"@common/utils/api\";\nimport { gql } from \"apollo-boost\";\nconst REFRESH_TOKEN = gql`\n  query {\n    refreshToken {\n      accessToken\n      refreshToken\n      userInfo {\n        _id\n        birthday\n        gender\n        permission\n        title\n        history\n        email\n        username\n        displayName\n        urlAvt {\n          default\n        }\n        email\n        phoneNumber\n        appliedRecruitment {\n          recruitment {\n            _id\n            slug\n          }\n          date\n        }\n        savedRecruitment {\n          _id\n          slug\n        }\n        subscribedCompany {\n          _id\n          name\n        }\n        seenCompany {\n          name\n        }\n        code\n        point\n        province {\n          _id\n          name\n        }\n        district {\n          _id\n          name\n        }\n        ward {\n          _id\n          name\n        }\n        street {\n          _id\n          name\n        }\n        career {\n          _id\n          name\n        }\n        isSeekingJob\n      }\n    }\n  }\n`;\nexport const refreshToken = async () => {\n  const result = await graphQLCommon(REFRESH_TOKEN, {});\n  return result;\n};\nconst UPDATE_USER_PASSWORD = gql`\n  mutation($updatePasswordInput: UpdatePasswordInput!) {\n    updateUserPassword(updatePasswordInput: $updatePasswordInput) {\n      _id\n      username\n    }\n  }\n`;\nexport const updateUserPassword = async variables => {\n  const result = await graphQLCommon(UPDATE_USER_PASSWORD, variables);\n  return result;\n};\nconst UPDATE_USER_PROFILE = gql`\n  mutation($updateUserInput: UpdateUserInput!) {\n    updateUserProfile(updateUserInput: $updateUserInput) {\n      _id\n      username\n    }\n  }\n`;\nexport const updateUserProfile = async variables => {\n  const result = await graphQLCommon(UPDATE_USER_PROFILE, variables);\n  return result;\n};","map":null,"metadata":{},"sourceType":"module"}