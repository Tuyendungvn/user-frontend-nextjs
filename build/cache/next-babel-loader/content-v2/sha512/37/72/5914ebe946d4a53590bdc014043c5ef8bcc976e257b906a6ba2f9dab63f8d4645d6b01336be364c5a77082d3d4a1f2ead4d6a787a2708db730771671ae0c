{"ast":null,"code":"import _regeneratorRuntime from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getAllReviewRequest),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(getEvaluateByUserSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(createRequestReviewSaga);\n\nimport { call, put } from \"@redux-saga/core/effects\";\nimport * as services from \"@services/requestReview\";\nimport { getAllRequestReviewSuccess, getEvaluateByUserSuccess } from \"@redux/actions/requestReview\";\nimport { actionSuccess } from \"@redux/actions/common\";\nimport { showNotification } from \"@components/ToastNotification\";\nexport function getAllReviewRequest(payload) {\n  var variables, response, _ref, results;\n\n  return _regeneratorRuntime.wrap(function getAllReviewRequest$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          variables = payload.payload;\n          _context.next = 3;\n          return call(services.getAllRequestReview, variables);\n\n        case 3:\n          response = _context.sent;\n          _ref = (response === null || response === void 0 ? void 0 : response.data) || {}, results = _ref.getAllRequestReview;\n\n          if (!results) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 8;\n          return put(getAllRequestReviewSuccess(results));\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function getEvaluateByUserSaga(payload) {\n  var variables, response, _ref2, results;\n\n  return _regeneratorRuntime.wrap(function getEvaluateByUserSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          variables = payload.payload;\n          _context2.next = 3;\n          return call(services.getEvaluateByUser, variables);\n\n        case 3:\n          response = _context2.sent;\n          _ref2 = (response === null || response === void 0 ? void 0 : response.data) || {}, results = _ref2.getEvaluateByUser;\n\n          if (!results) {\n            _context2.next = 8;\n            break;\n          }\n\n          _context2.next = 8;\n          return put(getEvaluateByUserSuccess(results));\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function createRequestReviewSaga(payload) {\n  var variables, response, _ref3, results;\n\n  return _regeneratorRuntime.wrap(function createRequestReviewSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          variables = payload.payload;\n          _context3.next = 3;\n          return call(services.createRequestReview, variables);\n\n        case 3:\n          response = _context3.sent;\n          _ref3 = (response === null || response === void 0 ? void 0 : response.data) || {}, results = _ref3.createRequestReview;\n\n          if (!results) {\n            _context3.next = 9;\n            break;\n          }\n\n          _context3.next = 8;\n          return put(actionSuccess());\n\n        case 8:\n          showNotification({\n            type: \"success\",\n            title: \"Thông báo\",\n            message: \"Yêu cầu đánh giá thành công\"\n          });\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":null,"metadata":{},"sourceType":"module"}