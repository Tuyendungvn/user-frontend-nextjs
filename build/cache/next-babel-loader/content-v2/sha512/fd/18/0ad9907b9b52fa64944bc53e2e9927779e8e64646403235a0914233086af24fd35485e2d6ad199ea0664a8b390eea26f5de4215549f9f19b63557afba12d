{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sagas\";\nimport rootReducer from \"./reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createWrapper } from \"next-redux-wrapper\";\n\nfunction bindMiddleware(middleware) {\n  // Just use redux devtools in dev mode\n  if (false) {\n    return composeWithDevTools(applyMiddleware(...middleware));\n  }\n\n  return applyMiddleware(...middleware);\n}\n\nfunction makeStore(initialState) {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(rootReducer, initialState, bindMiddleware([sagaMiddleware]));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n} // console.clear();\n\n\nexport const wrapper = createWrapper(makeStore, {\n  debug: false\n});","map":null,"metadata":{},"sourceType":"module"}