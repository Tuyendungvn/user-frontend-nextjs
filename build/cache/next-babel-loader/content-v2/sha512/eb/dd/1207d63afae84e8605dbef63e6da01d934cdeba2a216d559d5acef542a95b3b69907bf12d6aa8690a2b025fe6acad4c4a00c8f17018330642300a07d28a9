{"ast":null,"code":"import { gql } from \"apollo-boost\";\nimport { graphQLCommon } from \"@common/utils/api\";\nconst user = `\n    _id\n      code\n      title\n      history\n      identityCard\n      province {\n        _id\n        name\n        code\n      }\n      clientId\n      provider\n      birthday\n      gender\n      urlAvt {\n        default\n        small\n        medium\n      }\n      firstName\n      lastName\n      displayName\n      company {\n        name\n        code\n      }\n      username\n      email\n      phoneNumber\n      appliedRecruitment {\n        recruitment {\n          _id\n          slug\n          name\n          level {\n            name\n          }\n          location {\n            province {\n              name\n            }\n          }\n          createdAt\n        }\n        date\n      }\n      district {\n        name\n        code\n        _id\n      }\n      ward {\n        name\n        code\n        _id\n      }\n      street {\n        name\n        code\n        _id\n      }\n      point\n      postedJob\n      subscribedCompany {\n        name\n      }\n      seenCompany {\n        name\n      }\n      seenRecruitment {\n        name\n      }\n      savedRecruitment {\n        _id\n        slug\n        name\n        level {\n          name\n        }\n        location {\n          province {\n            name\n          }\n        }\n        createdAt\n      }\n      slug\n      keywords\n      language\n      enabled\n      career {\n        _id\n        name\n      }\n      isSeekingJob\n`;\nconst GET_USER_PROFILE = gql`\n  query($id: String!) {\n    getUserById(id: $id) {\n      ${user}\n    }\n  }\n`;\nexport const getUserProfile = async variables => {\n  const response = await graphQLCommon(GET_USER_PROFILE, variables);\n  return response;\n};\nconst GET_ALL_USER = gql`\nquery\n  {\n    getAllUserHasPermissions(permissions:[\"ADMIN\",\"EMPLOYER\",\"CANDIDATE\",\"MANAGER\"], page: 0, size: 9999)\n    {\n      totalCount\n      results{\n        ${user}\n     }\n     \n    }\n  }\n`;\nexport const getAllUser = async () => {\n  const response = await graphQLCommon(GET_ALL_USER, null);\n  return response;\n};\nconst CHECK_USER_PROFILE_EXIST = gql`\n  query {\n    checkProfileUserExist\n  }\n`;\nexport const checkProfileUserExist = async () => {\n  const response = await graphQLCommon(CHECK_USER_PROFILE_EXIST, null);\n  return response;\n};","map":null,"metadata":{},"sourceType":"module"}