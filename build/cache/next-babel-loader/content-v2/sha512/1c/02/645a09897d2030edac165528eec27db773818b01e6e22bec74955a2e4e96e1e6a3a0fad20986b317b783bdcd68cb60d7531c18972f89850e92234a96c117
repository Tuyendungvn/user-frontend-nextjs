{"ast":null,"code":"import _regeneratorRuntime from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getWorkLocation),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(getWorkLocationByCompany),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(createWorkLocation),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(deleteWorkLocation),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(updateWorkLocation);\n\nimport { put, call } from \"redux-saga/effects\";\nimport { getWorkLocationByCompanySuccess, getWorkLocationSuccess } from \"@redux/actions/workLocation\";\nimport { setLoading, actionSuccess } from \"@redux/actions/common\";\nimport * as services from \"@services/workLocation\";\nexport function getWorkLocation(payload) {\n  var variables, response, _ref, result;\n\n  return _regeneratorRuntime.wrap(function getWorkLocation$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          variables = payload.payload;\n          _context.next = 3;\n          return put(setLoading(true));\n\n        case 3:\n          _context.next = 5;\n          return call(services.getAllWorkLocation, variables);\n\n        case 5:\n          response = _context.sent;\n          _context.next = 8;\n          return put(setLoading(false));\n\n        case 8:\n          _ref = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref.getAllWorkLocation;\n\n          if (!result) {\n            _context.next = 12;\n            break;\n          }\n\n          _context.next = 12;\n          return put(getWorkLocationSuccess(result));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function getWorkLocationByCompany(payload) {\n  var variables, response, _ref2, results;\n\n  return _regeneratorRuntime.wrap(function getWorkLocationByCompany$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          variables = payload.payload;\n          _context2.next = 3;\n          return put(setLoading(true));\n\n        case 3:\n          _context2.next = 5;\n          return call(services.getWorkLocationByCompany, variables);\n\n        case 5:\n          response = _context2.sent;\n          _context2.next = 8;\n          return put(setLoading(false));\n\n        case 8:\n          _ref2 = (response === null || response === void 0 ? void 0 : response.data) || {}, results = _ref2.getWorkLocationByCompany;\n\n          if (!results) {\n            _context2.next = 12;\n            break;\n          }\n\n          _context2.next = 12;\n          return put(getWorkLocationByCompanySuccess(results));\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function createWorkLocation(payload) {\n  var variables, response, _ref3, result;\n\n  return _regeneratorRuntime.wrap(function createWorkLocation$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          variables = payload.payload;\n          _context3.next = 3;\n          return put(setLoading(true));\n\n        case 3:\n          _context3.next = 5;\n          return call(services.createWorkLocation, variables);\n\n        case 5:\n          response = _context3.sent;\n          _context3.next = 8;\n          return put(setLoading(true));\n\n        case 8:\n          _ref3 = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref3.createWorkLocation;\n\n          if (!result) {\n            _context3.next = 12;\n            break;\n          }\n\n          _context3.next = 12;\n          return put(actionSuccess());\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\nexport function deleteWorkLocation(payload) {\n  var variables, response, _ref4, result;\n\n  return _regeneratorRuntime.wrap(function deleteWorkLocation$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          variables = payload.payload;\n          _context4.next = 3;\n          return put(setLoading(true));\n\n        case 3:\n          _context4.next = 5;\n          return call(services.deleteWorkLocation, variables);\n\n        case 5:\n          response = _context4.sent;\n          _context4.next = 8;\n          return put(setLoading(true));\n\n        case 8:\n          _ref4 = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref4.deleteWorkLocation;\n\n          if (!result) {\n            _context4.next = 12;\n            break;\n          }\n\n          _context4.next = 12;\n          return put(actionSuccess());\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\nexport function updateWorkLocation(payload) {\n  var variables, response, _ref5, result;\n\n  return _regeneratorRuntime.wrap(function updateWorkLocation$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          variables = payload.payload;\n          _context5.next = 3;\n          return put(setLoading(true));\n\n        case 3:\n          _context5.next = 5;\n          return call(services.updateWorkLocation, variables);\n\n        case 5:\n          response = _context5.sent;\n          _context5.next = 8;\n          return put(setLoading(true));\n\n        case 8:\n          _ref5 = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref5.updateWorkLocation;\n\n          if (!result) {\n            _context5.next = 12;\n            break;\n          }\n\n          _context5.next = 12;\n          return put(actionSuccess());\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":null,"metadata":{},"sourceType":"module"}