{"ast":null,"code":"import _defineProperty from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _objectWithoutProperties from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from \"react\";\nimport OtpInput from \"react-otp-input\";\nimport { OTPInputContainer } from \"./styles\";\n\nvar OTPInput = function OTPInput(props) {\n  var value = props.value,\n      onChange = props.onChange,\n      _props$quantity = props.quantity,\n      quantity = _props$quantity === void 0 ? 4 : _props$quantity,\n      error = props.error,\n      touched = props.touched,\n      rest = _objectWithoutProperties(props, [\"value\", \"onChange\", \"quantity\", \"error\", \"touched\"]);\n\n  var _useState = useState(false),\n      isError = _useState[0],\n      setIsError = _useState[1];\n\n  useEffect(function () {\n    if (touched && error) {\n      !isError && setIsError(true);\n    } else {\n      isError && setIsError(false);\n    }\n  }, [touched, error]);\n\n  var handleChange = function handleChange(value) {\n    onChange && onChange(value);\n  };\n\n  return /*#__PURE__*/_jsx(OTPInputContainer, {\n    children: /*#__PURE__*/_jsx(OtpInput, _objectSpread({\n      isInputNum: true,\n      value: value,\n      containerStyle: \"otp-container\",\n      inputStyle: \"otp-input\",\n      focusStyle: \"otp-focus\",\n      numInputs: quantity,\n      onChange: handleChange,\n      hasErrored: isError,\n      placeholder: value,\n      shouldAutoFocus: quantity // isInputSecure={true}\n      ,\n      errorStyle: \"otp-error\"\n    }, rest))\n  });\n};\n\nexport default OTPInput;","map":null,"metadata":{},"sourceType":"module"}