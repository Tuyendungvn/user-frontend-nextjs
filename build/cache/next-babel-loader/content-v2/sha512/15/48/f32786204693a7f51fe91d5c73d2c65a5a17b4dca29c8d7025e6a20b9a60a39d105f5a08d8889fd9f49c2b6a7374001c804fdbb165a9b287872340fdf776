{"ast":null,"code":"import _regeneratorRuntime from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($notifyCreateInput: NotifyCreateInput!) {\\n    createNotify(notifyCreateInput: $notifyCreateInput) {\\n      _id\\n      name\\n      user {\\n        _id\\n        displayName\\n      }\\n      company {\\n        _id\\n        name\\n      }\\n      seen\\n      description\\n      noticeExpiration\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($notifySettingInput: NotifySettingInput!) {\\n    createNotify(notifySettingInput: $notifySettingInput) {\\n      _id\\n      name\\n      user {\\n        _id\\n        displayName\\n      }\\n      company {\\n        _id\\n        name\\n      }\\n      seen\\n      description\\n      noticeExpiration\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  query($id: String!) {\\n    getNotifySettingByUser(id: $id) {\\n      _id\\n      name\\n      description\\n      createdAt\\n      permission\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query($filterNotifySetting: FilterNotifySetting) {\\n    getAllNotifySetting(filterNotifySetting: $filterNotifySetting) {\\n      results {\\n        _id\\n        name\\n        description\\n        createdAt\\n        permission\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($userId: String!) {\\n    setSeenForNotify(userId: $userId)\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($userId: String!) {\\n    getNotifyByUser(userId: $userId) {\\n      _id\\n      name\\n      user {\\n        _id\\n        displayName\\n      }\\n      company {\\n        _id\\n        name\\n      }\\n      description\\n      createdAt\\n      seen\\n      scheduleInterview {\\n        _id\\n        positionInterview\\n        scheduleType\\n        scheduleTime\\n        scheduleLocation\\n        interviewerName\\n        interviewerPhone\\n        interviewerEmail\\n        receiver {\\n          _id\\n          displayName\\n        }\\n        company {\\n          _id\\n          name\\n        }\\n        recruitment {\\n          _id\\n        }\\n        isConfirmFromReceiver\\n      }\\n      invitationApply {\\n        _id\\n        positionApply\\n        address\\n        receiver {\\n          _id\\n          displayName\\n        }\\n        sender {\\n          _id\\n          displayName\\n        }\\n        senderName\\n        senderPhone\\n        senderEmail\\n        recruitment {\\n          _id\\n          name\\n        }\\n        company {\\n          _id\\n          name\\n        }\\n        isConfirmFromReceiver\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from \"apollo-boost\";\nimport { graphQLCommon } from \"@common/utils/api\";\nvar GET_NOTIFICATION = gql(_templateObject());\nexport var getNotificationByUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(variables) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return graphQLCommon(GET_NOTIFICATION, variables);\n\n          case 2:\n            result = _context.sent;\n            return _context.abrupt(\"return\", result);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getNotificationByUser(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar SET_SEEN_FOR_NOTIFY = gql(_templateObject2());\nexport var setSeenForNotify = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(variables) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return graphQLCommon(SET_SEEN_FOR_NOTIFY, variables);\n\n          case 2:\n            result = _context2.sent;\n            return _context2.abrupt(\"return\", result);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function setSeenForNotify(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar GET_NOTIFICATION_SETTING = gql(_templateObject3());\nexport var getNotificationSetting = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(variables) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return graphQLCommon(GET_NOTIFICATION_SETTING, variables);\n\n          case 2:\n            result = _context3.sent;\n            return _context3.abrupt(\"return\", result);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getNotificationSetting(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar GET_NOTIFICATION_SETTING_BY_USER = gql(_templateObject4());\nexport var getNotifySettingByUser = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(variables) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return graphQLCommon(GET_NOTIFICATION_SETTING_BY_USER, variables);\n\n          case 2:\n            result = _context4.sent;\n            return _context4.abrupt(\"return\", result);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getNotifySettingByUser(_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nvar CREATE_NOTIFY_SETTING = gql(_templateObject5());\nexport var createNotifySetting = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(variables) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return graphQLCommon(CREATE_NOTIFY_SETTING, variables);\n\n          case 2:\n            result = _context5.sent;\n            return _context5.abrupt(\"return\", result);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function createNotifySetting(_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nvar CREATE_NOTIFY = gql(_templateObject6());\nexport var createNotify = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(variables) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return graphQLCommon(CREATE_NOTIFY, variables);\n\n          case 2:\n            result = _context6.sent;\n            return _context6.abrupt(\"return\", result);\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function createNotify(_x6) {\n    return _ref6.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}