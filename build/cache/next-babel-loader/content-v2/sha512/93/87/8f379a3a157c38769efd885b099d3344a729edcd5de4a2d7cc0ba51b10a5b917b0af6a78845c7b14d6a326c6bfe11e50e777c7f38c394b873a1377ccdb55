{"ast":null,"code":"import jwtDecode from \"jwt-decode\";\nimport Cookies from \"universal-cookie\";\nvar cookies = new Cookies();\nexport var cookieKey = \"TUYENDUNGVN_USER_KEY\";\nexport var getUserCookies = function getUserCookies() {\n  return cookies.get(cookieKey);\n};\n/**\n * Returns the logged in user\n */\n\nexport var getLoggedInAccount = function getLoggedInAccount() {\n  var account = getUserCookies();\n  return account ? typeof account === \"object\" ? account : JSON.parse(account) : null;\n};\nexport var getToken = function getToken() {\n  var _getUserCookies, _getUserCookies2;\n\n  return ((_getUserCookies = getUserCookies()) === null || _getUserCookies === void 0 ? void 0 : _getUserCookies.token) || ((_getUserCookies2 = getUserCookies()) === null || _getUserCookies2 === void 0 ? void 0 : _getUserCookies2.accessToken) || \"\";\n};\nexport var removeUserCookies = function removeUserCookies() {\n  cookies.remove(cookieKey, {\n    path: \"/\"\n  });\n};\n/**\n * Checks if user is authenticated\n */\n\nexport var isAuthenticated = function isAuthenticated() {\n  var user = getLoggedInAccount();\n\n  if (!user) {\n    return false;\n  }\n\n  try {\n    var decoded = jwtDecode((user === null || user === void 0 ? void 0 : user.token) || (user === null || user === void 0 ? void 0 : user.accessToken) || \"\");\n    if (!decoded) return false;\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n};\nexport var setUserCookies = function setUserCookies(data) {\n  var decodedToken = jwtDecode((data === null || data === void 0 ? void 0 : data.token) || (data === null || data === void 0 ? void 0 : data.accessToken) || \"\");\n\n  var _ref = decodedToken || {},\n      exp = _ref.exp;\n\n  var timeNow = new Date().getTime();\n  var shortExp = timeNow + 5 * 3600 * 1000; // 5 hours\n\n  var expires = exp ? new Date(exp * 1000) : new Date(shortExp);\n  cookies.set(cookieKey, data, {\n    path: \"/\",\n    expires: expires\n  });\n};","map":null,"metadata":{},"sourceType":"module"}