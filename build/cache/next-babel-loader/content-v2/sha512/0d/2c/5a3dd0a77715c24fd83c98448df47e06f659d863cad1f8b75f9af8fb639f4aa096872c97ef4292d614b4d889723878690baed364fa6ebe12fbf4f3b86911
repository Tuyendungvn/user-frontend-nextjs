{"ast":null,"code":"import _regeneratorRuntime from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getAllScheduleInterviewSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(getScheduleInterviewById),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(updateScheduleInterview),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(createScheduleInterview),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(confirmTheScheduleInterview),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(cancelTheScheduleInterview);\n\nimport { call, put } from \"redux-saga/effects\";\nimport * as services from \"@services/scheduleInterview\";\nimport { actionSuccess, setLoading } from \"@redux/actions/common\";\nimport { showNotification } from \"@components/ToastNotification\";\nimport { getAllScheduleInterviewSuccess, getScheduleInterviewByIdSuccess } from \"@redux/actions/scheduleInterview\";\nexport function getAllScheduleInterviewSaga(payload) {\n  var variables, response, _ref, result;\n\n  return _regeneratorRuntime.wrap(function getAllScheduleInterviewSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          variables = payload.payload;\n          _context.next = 3;\n          return put(setLoading(true));\n\n        case 3:\n          _context.next = 5;\n          return call(services.getAllScheduleInterview, variables);\n\n        case 5:\n          response = _context.sent;\n          _context.next = 8;\n          return put(setLoading(false));\n\n        case 8:\n          _ref = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref.getAllScheduleInterview;\n\n          if (!result) {\n            _context.next = 12;\n            break;\n          }\n\n          _context.next = 12;\n          return put(getAllScheduleInterviewSuccess(result));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function getScheduleInterviewById(payload) {\n  var variables, response, _ref2, result;\n\n  return _regeneratorRuntime.wrap(function getScheduleInterviewById$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          variables = payload.payload;\n          _context2.next = 3;\n          return put(setLoading(true));\n\n        case 3:\n          _context2.next = 5;\n          return call(services.getScheduleInterviewById, variables);\n\n        case 5:\n          response = _context2.sent;\n          _context2.next = 8;\n          return put(setLoading(false));\n\n        case 8:\n          _ref2 = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref2.getScheduleInterviewById;\n\n          if (!result) {\n            _context2.next = 12;\n            break;\n          }\n\n          _context2.next = 12;\n          return put(getScheduleInterviewByIdSuccess(result));\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function updateScheduleInterview(payload) {\n  var variables, response, _ref3, result;\n\n  return _regeneratorRuntime.wrap(function updateScheduleInterview$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          variables = payload.payload;\n          _context3.next = 3;\n          return put(setLoading(true));\n\n        case 3:\n          _context3.next = 5;\n          return call(services.updateScheduleInterview, variables);\n\n        case 5:\n          response = _context3.sent;\n          _context3.next = 8;\n          return put(setLoading(false));\n\n        case 8:\n          _ref3 = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref3.updateScheduleInterview;\n\n          if (!result) {\n            _context3.next = 15;\n            break;\n          }\n\n          _context3.next = 12;\n          return put(actionSuccess());\n\n        case 12:\n          showNotification({\n            type: \"success\",\n            title: \"Thông báo\",\n            message: \"Cập nhật lịch phỏng vấn thành công\"\n          });\n          _context3.next = 16;\n          break;\n\n        case 15:\n          showNotification({\n            type: \"error\",\n            title: \"Thông báo\",\n            message: \"Cập nhật thất bại\"\n          });\n\n        case 16:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\nexport function createScheduleInterview(payload) {\n  var variables, response, _ref4, results;\n\n  return _regeneratorRuntime.wrap(function createScheduleInterview$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          variables = payload.payload;\n          _context4.next = 3;\n          return call(services.createScheduleInterview, variables);\n\n        case 3:\n          response = _context4.sent;\n          _ref4 = (response === null || response === void 0 ? void 0 : response.data) || {}, results = _ref4.createScheduleInterview;\n\n          if (!results) {\n            _context4.next = 11;\n            break;\n          }\n\n          _context4.next = 8;\n          return put(actionSuccess());\n\n        case 8:\n          showNotification({\n            type: \"success\",\n            title: \"Thông báo\",\n            message: \"Tạo lịch phỏng vấn thành công\"\n          });\n          _context4.next = 12;\n          break;\n\n        case 11:\n          showNotification({\n            type: \"error\",\n            title: \"Thông báo\",\n            message: \"Tạo lịch phỏng vấn thất bại\"\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\nexport function confirmTheScheduleInterview(payload) {\n  var variables, response, _ref5, result;\n\n  return _regeneratorRuntime.wrap(function confirmTheScheduleInterview$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          variables = payload.payload;\n          _context5.next = 3;\n          return put(setLoading(true));\n\n        case 3:\n          _context5.next = 5;\n          return call(services.confirmTheScheduleInterview, variables);\n\n        case 5:\n          response = _context5.sent;\n          _context5.next = 8;\n          return put(setLoading(false));\n\n        case 8:\n          _ref5 = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref5.confirmTheScheduleInterview;\n\n          if (!result) {\n            _context5.next = 13;\n            break;\n          }\n\n          _context5.next = 12;\n          return put(actionSuccess());\n\n        case 12:\n          showNotification({\n            type: \"success\",\n            title: \"Thông báo\",\n            message: \"Xác nhận tham gia phỏng vấn thành công!\"\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\nexport function cancelTheScheduleInterview(payload) {\n  var variables, response, _ref6, result;\n\n  return _regeneratorRuntime.wrap(function cancelTheScheduleInterview$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          variables = payload.payload;\n          _context6.next = 3;\n          return put(setLoading(true));\n\n        case 3:\n          _context6.next = 5;\n          return call(services.cancelTheScheduleInterview, variables);\n\n        case 5:\n          response = _context6.sent;\n          _context6.next = 8;\n          return put(setLoading(false));\n\n        case 8:\n          _ref6 = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref6.cancelTheScheduleInterview;\n\n          if (!result) {\n            _context6.next = 13;\n            break;\n          }\n\n          _context6.next = 12;\n          return put(actionSuccess());\n\n        case 12:\n          showNotification({\n            type: \"success\",\n            title: \"Thông báo\",\n            message: \"Bạn đã từ chối lịch mời tham gia phỏng vấn!\"\n          });\n\n        case 13:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}","map":null,"metadata":{},"sourceType":"module"}