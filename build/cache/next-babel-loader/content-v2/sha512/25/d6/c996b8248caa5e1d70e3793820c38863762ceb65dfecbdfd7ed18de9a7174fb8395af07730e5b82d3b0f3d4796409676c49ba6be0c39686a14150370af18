{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch } from \"react-redux\";\nimport { isEmpty } from \"lodash\";\nimport { PATH } from \"@routes\";\nimport { getBetweenDay, renderLocation } from \"@common/functions\";\nimport useAuth from \"@common/hooks/useAuth\";\nimport { setSeenRecruitment } from \"@redux/actions/recruitment\";\nimport Benefit from \"@designs/Benefit\";\nimport { BenefitContainer, CompanyName, Content, Img, LinkWrapper, Link, Location, Logo, JobCardContainer, JobCardWrapper, SalaryWrapper, Title, UpdateTime } from \"./styles\";\nconst skeletonImage = \"/img/skeleton/default-small.jpg\";\nconst today = new Date();\n\nconst JobCard = ({\n  job\n}) => {\n  const {\n    t\n  } = useTranslation([\"job\"]);\n  const dispatch = useDispatch();\n  const {\n    _id,\n    name,\n    companyBenefit,\n    companySlug,\n    companyLogo,\n    companyName,\n    location,\n    updatedAt,\n    expiredDate,\n    salaryMin,\n    salaryMax,\n    slug,\n    dealSalary\n  } = job;\n  const {\n    accountInfo\n  } = useAuth();\n  const userInfo = (accountInfo === null || accountInfo === void 0 ? void 0 : accountInfo.userInfo) || {};\n  const locationArray = location === null || location === void 0 ? void 0 : location.map(item => {\n    var _item$province;\n\n    return (_item$province = item.province) === null || _item$province === void 0 ? void 0 : _item$province.name;\n  });\n  const locationString = renderLocation(locationArray);\n  const updateDay = getBetweenDay(new Date(updatedAt), today);\n  const expiredDay = getBetweenDay(today, new Date(expiredDate));\n\n  const handleClickJob = () => {\n    if (isEmpty(userInfo)) return;\n    dispatch(setSeenRecruitment({\n      userId: userInfo === null || userInfo === void 0 ? void 0 : userInfo._id,\n      recruitmentId: _id\n    }));\n  };\n\n  return /*#__PURE__*/_jsx(JobCardWrapper, {\n    children: /*#__PURE__*/_jsxs(JobCardContainer, {\n      children: [/*#__PURE__*/_jsx(Logo, {\n        children: /*#__PURE__*/_jsx(Img, {\n          src: (companyLogo === null || companyLogo === void 0 ? void 0 : companyLogo.small) || (companyLogo === null || companyLogo === void 0 ? void 0 : companyLogo.default) || (companyLogo === null || companyLogo === void 0 ? void 0 : companyLogo.medium) || skeletonImage,\n          alt: name,\n          loading: \"lazy\"\n        })\n      }), /*#__PURE__*/_jsxs(Content, {\n        children: [/*#__PURE__*/_jsx(LinkWrapper, {\n          onClick: handleClickJob,\n          children: /*#__PURE__*/_jsx(Link, {\n            className: \"paragraph-with-2-line\",\n            routeName: PATH.JOB_DETAIL,\n            params: {\n              slug: slug\n            },\n            children: /*#__PURE__*/_jsx(Title, {\n              title: name,\n              className: \"paragraph-with-1-line\",\n              children: name\n            })\n          })\n        }), /*#__PURE__*/_jsx(Link, {\n          className: \"paragraph-with-1-line\",\n          routeName: PATH.COMPANY_RECRUITMENT,\n          params: {\n            slug: companySlug\n          },\n          children: /*#__PURE__*/_jsx(CompanyName, {\n            children: companyName\n          })\n        }), /*#__PURE__*/_jsx(Location, {\n          children: locationString\n        }), /*#__PURE__*/_jsxs(UpdateTime, {\n          children: [updateDay == 0 ? t(\"updated-today\") : t(\"updated-has-number\").replace(\"$update\", String(updateDay)), \"-\", expiredDay <= 0 ? t(\"expired\") : t(\"expired-has-number\").replace(\"$date\", String(expiredDay))]\n        }), /*#__PURE__*/_jsx(BenefitContainer, {\n          children: companyBenefit === null || companyBenefit === void 0 ? void 0 : companyBenefit.map(item => {\n            var _item$icon, _item$icon$icon, _item$icon2, _item$icon2$icon, _item$icon3, _item$icon3$icon, _item$icon4;\n\n            return /*#__PURE__*/_jsx(Benefit, {\n              urlImg: (item === null || item === void 0 ? void 0 : (_item$icon = item.icon) === null || _item$icon === void 0 ? void 0 : (_item$icon$icon = _item$icon.icon) === null || _item$icon$icon === void 0 ? void 0 : _item$icon$icon.small) || (item === null || item === void 0 ? void 0 : (_item$icon2 = item.icon) === null || _item$icon2 === void 0 ? void 0 : (_item$icon2$icon = _item$icon2.icon) === null || _item$icon2$icon === void 0 ? void 0 : _item$icon2$icon.medium) || (item === null || item === void 0 ? void 0 : (_item$icon3 = item.icon) === null || _item$icon3 === void 0 ? void 0 : (_item$icon3$icon = _item$icon3.icon) === null || _item$icon3$icon === void 0 ? void 0 : _item$icon3$icon.default),\n              text: item === null || item === void 0 ? void 0 : (_item$icon4 = item.icon) === null || _item$icon4 === void 0 ? void 0 : _item$icon4.name\n            });\n          })\n        }), /*#__PURE__*/_jsx(SalaryWrapper, {\n          children: Object.keys(userInfo).length > 0 ? /*#__PURE__*/_jsx(\"div\", {\n            children: dealSalary ? t(\"deal-salary\") : `${salaryMin} ${t(\"unit\")} - ${salaryMax} ${t(\"unit\")}`\n          }) : /*#__PURE__*/_jsx(Link, {\n            routeName: PATH.LOGIN,\n            isSecondary: true,\n            children: t(\"login-to-see\")\n          })\n        })]\n      })]\n    })\n  });\n};\n\nexport default JobCard;","map":null,"metadata":{},"sourceType":"module"}