{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Fragment, useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useTranslation } from \"next-i18next\";\nimport { useRouter } from \"next/router\";\nimport { Transition } from \"@headlessui/react\";\nimport { useClickOutSide } from \"@common/hooks/useClickOutSide\";\nimport { formatParams } from \"@common/functions\";\nimport AutoComplete from \"@designs/AutoComplete\";\nimport { SVG } from \"@designs/SVG\";\nimport { Button, CommonKeyword, CommonKeywordContent, CommonKeywordItem, Dropdown, DropdownMobile, Form, Input, ListBoxItem, ListBoxMenu, RecentSearch, RecentSearchItem, SearchBoxContainer, SearchIcon, TextField, Title } from \"./styles\";\n\nconst SearchBox = props => {\n  const {\n    className = \"\",\n    onSubmit,\n    listSearchCurrent = [],\n    hasProvince = false,\n    value = \"\"\n  } = props;\n  const {\n    t\n  } = useTranslation([\"common\"]);\n  const fullQuery = useRouter().query || {};\n  const {\n    elementRef,\n    setElementVisible\n  } = useClickOutSide(false);\n  const {\n    province: _province\n  } = fullQuery;\n  const queryProvince = formatParams(decodeURIComponent(_province || \"\"));\n  const {\n    mostKeyword = []\n  } = useSelector(state => state.recruitment);\n  const {\n    provinces\n  } = useSelector(state => state.location);\n  const {\n    0: inputValue,\n    1: setInputValue\n  } = useState(\"\");\n  const {\n    0: provinceSelected,\n    1: setProvinceSelected\n  } = useState();\n  const {\n    0: listProvince,\n    1: setListProvince\n  } = useState([]);\n  const {\n    0: isOpenDropdown,\n    1: setIsOpenDropdown\n  } = useState(false);\n  const {\n    0: hotKeywords,\n    1: setHotKeywords\n  } = useState([]);\n  useEffect(() => {\n    addOptionToProvince();\n  }, [provinces]);\n  useEffect(() => {\n    if (value) {\n      setInputValue(value);\n    } else {\n      setInputValue(\"\");\n    }\n  }, [value]);\n  useEffect(() => {\n    if ((mostKeyword === null || mostKeyword === void 0 ? void 0 : mostKeyword.length) > 0) {\n      const hotKeyword = mostKeyword === null || mostKeyword === void 0 ? void 0 : mostKeyword.filter(keyword => keyword.isHot === true);\n      setHotKeywords(hotKeyword);\n    }\n  }, [mostKeyword]);\n  useEffect(() => {\n    if (queryProvince) {\n      const provinceSelected = listProvince === null || listProvince === void 0 ? void 0 : listProvince.find(item => (item === null || item === void 0 ? void 0 : item.slug) === queryProvince);\n      setProvinceSelected(provinceSelected);\n    } else {\n      setProvinceSelected(listProvince[0]);\n    }\n  }, [listProvince, fullQuery]);\n\n  const handleSelectProvince = option => {\n    setProvinceSelected(option);\n    onSubmit && onSubmit(inputValue, option === null || option === void 0 ? void 0 : option.slug);\n  };\n\n  const addOptionToProvince = () => {\n    let draftArray = [...provinces];\n    const allProvince = {\n      name: t(\"filter-all-location\")\n    };\n    draftArray.unshift(allProvince);\n    setListProvince(draftArray);\n  };\n\n  const handleSubmit = e => {\n    onSubmit && onSubmit(inputValue, provinceSelected === null || provinceSelected === void 0 ? void 0 : provinceSelected.slug);\n    e.preventDefault();\n    setIsOpenDropdown(false);\n  };\n\n  const handleChange = e => {\n    setInputValue(e.target.value);\n    setIsOpenDropdown(true);\n  };\n\n  const handleClickSuggest = (e, value) => {\n    setInputValue(value);\n    onSubmit && onSubmit(value, provinceSelected === null || provinceSelected === void 0 ? void 0 : provinceSelected.slug);\n    e.preventDefault();\n  };\n\n  const handleClickKeyword = (e, keyword) => {\n    setInputValue(value);\n    onSubmit && onSubmit(keyword === null || keyword === void 0 ? void 0 : keyword.name, provinceSelected === null || provinceSelected === void 0 ? void 0 : provinceSelected.slug);\n    e.preventDefault();\n  };\n\n  const handleFocus = () => {\n    setElementVisible(true);\n    setIsOpenDropdown(true);\n  };\n\n  const handleClose = () => {\n    setIsOpenDropdown(false);\n  };\n\n  return /*#__PURE__*/_jsx(SearchBoxContainer, {\n    className: className,\n    ref: elementRef,\n    hasProvince: true,\n    children: /*#__PURE__*/_jsxs(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxs(TextField, {\n        hasProvince: hasProvince,\n        children: [/*#__PURE__*/_jsx(SearchIcon, {\n          className: \"h-2 text-black min-w-2\"\n        }), /*#__PURE__*/_jsx(Input, {\n          value: inputValue,\n          onFocus: handleFocus,\n          onBlur: handleClose,\n          placeholder: t(\"search-box.place-holder\"),\n          onChange: handleChange\n        })]\n      }), /*#__PURE__*/_jsx(Transition, {\n        show: isOpenDropdown,\n        as: Fragment,\n        enter: \"transition ease-out duration-100\",\n        enterFrom: \"transform opacity-0\",\n        enterTo: \"transform opacity-100\",\n        leave: \"transition ease-in duration-75\",\n        leaveFrom: \"transform opacity-100\",\n        leaveTo: \"transform opacity-0\",\n        children: /*#__PURE__*/_jsxs(Dropdown, {\n          children: [/*#__PURE__*/_jsxs(RecentSearch, {\n            children: [/*#__PURE__*/_jsx(Title, {\n              children: t(\"search-box.recent-search\")\n            }), (listSearchCurrent === null || listSearchCurrent === void 0 ? void 0 : listSearchCurrent.length) > 0 && (listSearchCurrent === null || listSearchCurrent === void 0 ? void 0 : listSearchCurrent.filter((text, index) => index > (listSearchCurrent === null || listSearchCurrent === void 0 ? void 0 : listSearchCurrent.length) - 6).map((value, index) => /*#__PURE__*/_jsx(RecentSearchItem, {\n              onClick: e => handleClickSuggest(e, value),\n              children: value\n            }, index)))]\n          }), /*#__PURE__*/_jsxs(CommonKeyword, {\n            children: [/*#__PURE__*/_jsx(Title, {\n              children: t(\"search-box.common-keyword\")\n            }), /*#__PURE__*/_jsx(CommonKeywordContent, {\n              children: (hotKeywords === null || hotKeywords === void 0 ? void 0 : hotKeywords.length) > 0 && hotKeywords.map((keyword, index) => /*#__PURE__*/_jsx(CommonKeywordItem, {\n                onClick: e => handleClickKeyword(e, keyword),\n                children: keyword === null || keyword === void 0 ? void 0 : keyword.name\n              }, index))\n            })]\n          })]\n        })\n      }), /*#__PURE__*/_jsx(Transition, {\n        show: isOpenDropdown,\n        as: Fragment,\n        enter: \"transition ease-out duration-100\",\n        enterFrom: \"transform opacity-0\",\n        enterTo: \"transform opacity-100\",\n        leave: \"transition ease-in duration-75\",\n        leaveFrom: \"transform opacity-100\",\n        leaveTo: \"transform opacity-0\",\n        children: /*#__PURE__*/_jsx(DropdownMobile, {\n          children: /*#__PURE__*/_jsxs(RecentSearch, {\n            children: [/*#__PURE__*/_jsx(Title, {\n              children: t(\"search-box.recent-search\")\n            }), (listSearchCurrent === null || listSearchCurrent === void 0 ? void 0 : listSearchCurrent.length) > 0 && (listSearchCurrent === null || listSearchCurrent === void 0 ? void 0 : listSearchCurrent.filter((text, index) => index > (listSearchCurrent === null || listSearchCurrent === void 0 ? void 0 : listSearchCurrent.length) - 6).map((value, index) => /*#__PURE__*/_jsx(RecentSearchItem, {\n              onClick: e => handleClickSuggest(e, value),\n              children: value\n            }, index)))]\n          })\n        })\n      }), hasProvince && /*#__PURE__*/_jsx(AutoComplete, {\n        className: \"w-full laptop:w-26.5\",\n        MenuButton: /*#__PURE__*/_jsxs(ListBoxMenu, {\n          children: [/*#__PURE__*/_jsx(SVG, {\n            name: \"common/location\",\n            width: \"24\",\n            height: \"24\"\n          }), provinceSelected === null || provinceSelected === void 0 ? void 0 : provinceSelected.name]\n        }),\n        fieldToSearch: [\"name\", \"nameEn\"],\n        onChange: handleSelectProvince,\n        optionSelected: provinceSelected,\n        options: listProvince,\n        renderItem: option => /*#__PURE__*/_jsx(ListBoxItem, {\n          children: option === null || option === void 0 ? void 0 : option.name\n        })\n      }), /*#__PURE__*/_jsx(Button, {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsx(\"p\", {\n          className: \"phone:block\",\n          children: t(\"search-box.search\")\n        })\n      })]\n    })\n  });\n};\n\nexport default SearchBox;\n\nconst removeParams = _query => {\n  const newQuery = _objectSpread({}, _query);\n\n  delete newQuery.province;\n  delete newQuery.career;\n  delete newQuery.salary;\n  delete newQuery.level;\n  delete newQuery.type;\n  return newQuery || {};\n};","map":null,"metadata":{},"sourceType":"module"}