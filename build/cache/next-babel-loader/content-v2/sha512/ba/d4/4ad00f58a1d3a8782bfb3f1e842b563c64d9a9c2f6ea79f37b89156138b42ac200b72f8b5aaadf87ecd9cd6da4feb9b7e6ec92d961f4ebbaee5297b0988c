{"ast":null,"code":"import _regeneratorRuntime from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(notify);\n\nimport { all, takeLatest } from \"@redux-saga/core/effects\";\nimport * as types from \"@redux/types/notification\";\nimport { getNotifications, setSeenForNotify, getNotificationsSetting, getNotificationsSettingByUser, createNotifySetting, createNotify } from \"./notifications\";\nexport default function notify() {\n  return _regeneratorRuntime.wrap(function notify$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([takeLatest(types.GET_NOTIFICATIONS_BY_USER, getNotifications), takeLatest(types.SET_SEEN_FOR_NOTIFY, setSeenForNotify), takeLatest(types.GET_NOTIFICATIONS_SETTING, getNotificationsSetting), takeLatest(types.GET_NOTIFICATIONS_SETTING_BY_USER, getNotificationsSettingByUser), takeLatest(types.CREATE_NOTIFY_SETTING, createNotifySetting), takeLatest(types.CREATE_NOTIFY, createNotify)]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":null,"metadata":{},"sourceType":"module"}