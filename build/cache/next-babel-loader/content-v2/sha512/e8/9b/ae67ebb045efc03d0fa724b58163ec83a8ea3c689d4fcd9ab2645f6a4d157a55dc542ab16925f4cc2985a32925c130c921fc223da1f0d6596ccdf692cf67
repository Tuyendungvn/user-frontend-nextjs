{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport dayjs from \"dayjs\";\nimport { useTranslation } from \"react-i18next\";\nimport { isEmpty } from \"lodash\";\nimport { renderLocation } from \"@common/functions\";\nimport { removeSavedRecruitment, setAppliedRecruitment } from \"@redux/actions/recruitment\";\nimport Link from \"@designs/Link\";\nimport { resetAction } from \"@redux/actions/common\";\nimport { refreshToken } from \"@redux/actions/auth\";\nimport { PATH } from \"@routes/index\";\nimport { ButtonDelete, ButtonApplied, CardContainer, Content, LeftCard, RightCard, Text, Title } from \"./style\";\n\nconst CardJobSaved = ({\n  recruitment\n}) => {\n  const {\n    t\n  } = useTranslation([\"common\"]);\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.user);\n  const {\n    currentUser\n  } = useSelector(state => state.auth);\n  const {\n    actionSuccess\n  } = useSelector(state => state.actions);\n  const {\n    0: isApplied,\n    1: setIsApplied\n  } = useState();\n  const {\n    level,\n    location,\n    createdAt,\n    name,\n    _id,\n    slug\n  } = recruitment;\n  const userInfo = currentUser === null || currentUser === void 0 ? void 0 : currentUser.userInfo;\n  const locationArray = location === null || location === void 0 ? void 0 : location.map(item => {\n    var _item$province;\n\n    return (_item$province = item.province) === null || _item$province === void 0 ? void 0 : _item$province.name;\n  });\n  const locationString = renderLocation(locationArray);\n  useEffect(() => {\n    if (!isEmpty(user)) {\n      checkApplied();\n    }\n  }, [user]);\n  useEffect(() => {\n    if (actionSuccess) {\n      dispatch(resetAction());\n      dispatch(refreshToken());\n      checkApplied();\n    }\n  }, [actionSuccess]);\n\n  const setAppliedRecruitmentAPI = (userId, recruitmentId) => {\n    const payload = {\n      userId: userId,\n      recruitmentId: recruitmentId\n    };\n    dispatch(setAppliedRecruitment(payload));\n  };\n\n  const handleDelete = () => {\n    dispatch(removeSavedRecruitment({\n      userId: userInfo === null || userInfo === void 0 ? void 0 : userInfo._id,\n      recruitmentId: _id\n    }));\n  };\n\n  const handleApply = () => {\n    setAppliedRecruitmentAPI(userInfo === null || userInfo === void 0 ? void 0 : userInfo._id, _id);\n  };\n\n  const checkApplied = () => {\n    var _user$appliedRecruitm;\n\n    const listAppliedId = user === null || user === void 0 ? void 0 : (_user$appliedRecruitm = user.appliedRecruitment) === null || _user$appliedRecruitm === void 0 ? void 0 : _user$appliedRecruitm.map(item => {\n      var _item$recruitment;\n\n      return item === null || item === void 0 ? void 0 : (_item$recruitment = item.recruitment) === null || _item$recruitment === void 0 ? void 0 : _item$recruitment._id;\n    });\n\n    if (listAppliedId !== null && listAppliedId !== void 0 && listAppliedId.includes(_id)) {\n      setIsApplied(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(CardContainer, {\n    children: [/*#__PURE__*/_jsxs(LeftCard, {\n      children: [/*#__PURE__*/_jsx(Link, {\n        routeName: PATH.JOB_DETAIL,\n        params: {\n          slug\n        },\n        children: /*#__PURE__*/_jsx(Title, {\n          children: name\n        })\n      }), /*#__PURE__*/_jsxs(Content, {\n        children: [/*#__PURE__*/_jsx(Text, {\n          children: level === null || level === void 0 ? void 0 : level.name\n        }), locationString ? /*#__PURE__*/_jsx(Text, {\n          children: locationString\n        }) : null, /*#__PURE__*/_jsx(Text, {\n          children: dayjs(createdAt).format(\"DD/MM/YYYY\")\n        })]\n      })]\n    }), /*#__PURE__*/_jsxs(RightCard, {\n      children: [/*#__PURE__*/_jsx(ButtonApplied, {\n        onClick: handleApply,\n        style: {\n          opacity: isApplied ? 0.5 : 1,\n          pointerEvents: isApplied ? \"none\" : \"initial\"\n        },\n        children: isApplied ? t(\"applied\") : t(\"apply\")\n      }), /*#__PURE__*/_jsx(ButtonDelete, {\n        onClick: handleDelete,\n        children: t(\"delete\")\n      })]\n    })]\n  });\n};\n\nexport default CardJobSaved;","map":null,"metadata":{},"sourceType":"module"}