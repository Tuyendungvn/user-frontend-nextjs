{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useTranslation } from \"next-i18next\";\nimport { isEmpty } from \"lodash\";\nimport { getRecordByUserId } from \"@redux/actions/record\";\nimport { getUserProfile } from \"@redux/actions/user\";\nimport { getRatingByUserId } from \"@redux/actions/rating\";\nimport { getEvaluateByUserId } from \"@redux/actions/evaluate\";\nimport { refreshToken } from \"@redux/actions/auth\";\nimport { resetAction } from \"@redux/actions/common\";\nimport About from \"./components/About\";\nimport CurriculumVitae from \"./components/CurriculumVitae\";\nimport DesiredJob from \"./components/DesiredJob\";\nimport Education from \"./components/Education\";\nimport Experience from \"./components/Experience\";\nimport GeneralInfo from \"./components/GeneralInfo\";\nimport Overview from \"./components/Overview\";\nimport Single from \"./components/Single\";\nimport { checkProfileUserService, addLocalStorage } from \"./helper\";\nimport { Container } from \"./styles\";\nimport RecommendedDialog from \"@components/NotifyDialog\";\n\nconst PersonalInfo = props => {\n  var _currentUser$userInfo, _currentUser$userInfo2, _user$urlAvt, _currentUser$userInfo3, _currentUser$userInfo4, _currentUser$userInfo5, _currentUser$userInfo6, _record$salaryWanted, _currentUser$userInfo7, _currentUser$userInfo8;\n\n  const dispatch = useDispatch();\n  const {\n    currentUser\n  } = useSelector(state => state.auth);\n  const {\n    record\n  } = useSelector(state => state.record);\n  const {\n    user\n  } = useSelector(state => state.user);\n  const {\n    rating\n  } = useSelector(state => state.rating);\n  const {\n    evaluateList\n  } = useSelector(state => state.evaluate);\n  const {\n    actionSuccess\n  } = useSelector(state => state.actions);\n  const {\n    t\n  } = useTranslation([\"job-management\"]);\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    0: firstRender,\n    1: setFirstRender\n  } = useState(true);\n  useEffect(() => {\n    if (actionSuccess) {\n      dispatch(refreshToken());\n      dispatch(resetAction());\n      setFirstRender(false);\n    }\n  }, [actionSuccess]);\n  useEffect(() => {\n    if (!isEmpty(currentUser)) {\n      const getDataWithUserIdPayload = {\n        userId: currentUser.userInfo._id\n      };\n      const getUserPayload = {\n        id: currentUser.userInfo._id\n      };\n      dispatch(getUserProfile(getUserPayload));\n      dispatch(getRecordByUserId(getDataWithUserIdPayload));\n      dispatch(getRatingByUserId(getDataWithUserIdPayload));\n      dispatch(getEvaluateByUserId(getDataWithUserIdPayload));\n      checkFullProfileAndRecord();\n    }\n  }, [currentUser]);\n  const averageScore = evaluateList === null || evaluateList === void 0 ? void 0 : evaluateList.map(evaluate => evaluate.avgPoint).reduce((previousValue, currentValue) => {\n    return (previousValue + currentValue) / evaluateList.length;\n  }, 0);\n\n  const handleClose = () => {\n    isOpen && setIsOpen(false);\n  };\n\n  const checkFullProfileAndRecord = async () => {\n    // const recordResult = await checkRecordUserService();\n    const profileResult = await checkProfileUserService();\n\n    if (profileResult) {\n      addLocalStorage(1);\n    } else {\n      addLocalStorage(0);\n      firstRender && setIsOpen(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(Container, {\n    children: [/*#__PURE__*/_jsx(Overview, {\n      accumulatedScore: currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$userInfo = currentUser.userInfo) === null || _currentUser$userInfo === void 0 ? void 0 : _currentUser$userInfo.point,\n      userId: currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$userInfo2 = currentUser.userInfo) === null || _currentUser$userInfo2 === void 0 ? void 0 : _currentUser$userInfo2._id,\n      avatarURL: (user === null || user === void 0 ? void 0 : (_user$urlAvt = user.urlAvt) === null || _user$urlAvt === void 0 ? void 0 : _user$urlAvt.default) || \"/img/skeleton/avatar.jpg\",\n      averageScore: averageScore === null || averageScore === void 0 ? void 0 : averageScore.toPrecision(3),\n      memberType: !!rating ? rating.rate : t(\"personal-info.new-member\")\n    }), /*#__PURE__*/_jsx(GeneralInfo, {\n      code: user === null || user === void 0 ? void 0 : user.code,\n      userId: user === null || user === void 0 ? void 0 : user._id,\n      description: user === null || user === void 0 ? void 0 : user.history,\n      displayName: user === null || user === void 0 ? void 0 : user.displayName,\n      title: user === null || user === void 0 ? void 0 : user.title,\n      career: user === null || user === void 0 ? void 0 : user.career\n    }), /*#__PURE__*/_jsx(Single, {\n      phoneNumber: (user === null || user === void 0 ? void 0 : user.phoneNumber) || \"\",\n      userId: user === null || user === void 0 ? void 0 : user._id,\n      email: (user === null || user === void 0 ? void 0 : user.email) || (currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$userInfo3 = currentUser.userInfo) === null || _currentUser$userInfo3 === void 0 ? void 0 : _currentUser$userInfo3.email),\n      idCard: (user === null || user === void 0 ? void 0 : user.identityCard) || \"\",\n      dateOfBirth: user === null || user === void 0 ? void 0 : user.birthday,\n      province: user === null || user === void 0 ? void 0 : user.province,\n      district: user === null || user === void 0 ? void 0 : user.district,\n      ward: user === null || user === void 0 ? void 0 : user.ward,\n      address: user === null || user === void 0 ? void 0 : user.street,\n      gender: user === null || user === void 0 ? void 0 : user.gender\n    }), /*#__PURE__*/_jsx(About, {\n      content: record === null || record === void 0 ? void 0 : record.description,\n      recordId: record === null || record === void 0 ? void 0 : record._id,\n      userId: currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$userInfo4 = currentUser.userInfo) === null || _currentUser$userInfo4 === void 0 ? void 0 : _currentUser$userInfo4._id\n    }), /*#__PURE__*/_jsx(Experience, {\n      experienceList: record === null || record === void 0 ? void 0 : record.workExperience,\n      recordId: record === null || record === void 0 ? void 0 : record._id,\n      userId: currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$userInfo5 = currentUser.userInfo) === null || _currentUser$userInfo5 === void 0 ? void 0 : _currentUser$userInfo5._id\n    }), /*#__PURE__*/_jsx(Education, {\n      educationList: record === null || record === void 0 ? void 0 : record.education,\n      recordId: record === null || record === void 0 ? void 0 : record._id,\n      userId: currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$userInfo6 = currentUser.userInfo) === null || _currentUser$userInfo6 === void 0 ? void 0 : _currentUser$userInfo6._id\n    }), /*#__PURE__*/_jsx(DesiredJob, {\n      careers: record === null || record === void 0 ? void 0 : record.career,\n      level: record === null || record === void 0 ? void 0 : record.jobLevelWanted,\n      salary: record === null || record === void 0 ? void 0 : (_record$salaryWanted = record.salaryWanted) === null || _record$salaryWanted === void 0 ? void 0 : _record$salaryWanted.toString(),\n      workLocation: record === null || record === void 0 ? void 0 : record.workPlace,\n      benefitsWanted: record === null || record === void 0 ? void 0 : record.benefitsWanted,\n      recordId: record === null || record === void 0 ? void 0 : record._id,\n      userId: currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$userInfo7 = currentUser.userInfo) === null || _currentUser$userInfo7 === void 0 ? void 0 : _currentUser$userInfo7._id\n    }), /*#__PURE__*/_jsx(RecommendedDialog, {\n      title: t(\"alert-title\"),\n      message: t(\"alert-content\"),\n      onConfirm: handleClose,\n      isOpen: isOpen\n    }), /*#__PURE__*/_jsx(CurriculumVitae, {\n      fileNameCV: record === null || record === void 0 ? void 0 : record.fileNameCV,\n      urlCV: record === null || record === void 0 ? void 0 : record.urlCV,\n      recordId: record === null || record === void 0 ? void 0 : record._id,\n      userId: currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$userInfo8 = currentUser.userInfo) === null || _currentUser$userInfo8 === void 0 ? void 0 : _currentUser$userInfo8._id\n    })]\n  });\n};\n\nexport default PersonalInfo;","map":null,"metadata":{},"sourceType":"module"}