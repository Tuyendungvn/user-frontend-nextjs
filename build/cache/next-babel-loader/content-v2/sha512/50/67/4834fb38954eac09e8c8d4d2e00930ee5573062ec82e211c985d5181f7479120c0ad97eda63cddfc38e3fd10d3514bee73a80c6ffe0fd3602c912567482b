{"ast":null,"code":"import _regeneratorRuntime from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getAllCompanySaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(getCompanySaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(getCompanyBySlugSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(getNewestCompanySaga),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(getMostViewCompanySaga),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(getMostAppliedCompanySaga),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(getMostRecruitingCompanySaga),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(updateCompanySaga),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(updateCompanyProvinceSaga),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(setSubscribeCompanySaga),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(setSeenCompanySaga);\n\nimport { actionSuccess } from \"@redux/actions/common\";\nimport { call, put } from \"redux-saga/effects\";\nimport * as services from \"@services/company\";\nimport { getAllCompanySuccess, getCompanyBySlugSuccess, getCompanySuccess, getMostAppliedCompanySuccess, getMostRecruitingCompanySuccess, getMostViewCompanySuccess, getNewestCompanySuccess } from \"@redux/actions/company\";\nexport function getAllCompanySaga(payload) {\n  var variables, response, _ref, result;\n\n  return _regeneratorRuntime.wrap(function getAllCompanySaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          variables = payload.payload;\n          _context.next = 3;\n          return call(services.getAllCompany, variables);\n\n        case 3:\n          response = _context.sent;\n          _ref = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref.getCompanies;\n\n          if (!result) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 8;\n          return put(getAllCompanySuccess(result));\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function getCompanySaga(payload) {\n  var variables, response, _ref2, result;\n\n  return _regeneratorRuntime.wrap(function getCompanySaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          variables = payload.payload;\n          _context2.next = 3;\n          return call(services.getCompany, variables);\n\n        case 3:\n          response = _context2.sent;\n          _ref2 = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref2.getCompanyById;\n\n          if (!result) {\n            _context2.next = 8;\n            break;\n          }\n\n          _context2.next = 8;\n          return put(getCompanySuccess(result));\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function getCompanyBySlugSaga(payload) {\n  var variables, response, _ref3, result;\n\n  return _regeneratorRuntime.wrap(function getCompanyBySlugSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          variables = payload.payload;\n          _context3.next = 3;\n          return call(services.getCompanyBySlug, variables);\n\n        case 3:\n          response = _context3.sent;\n          _ref3 = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref3.getCompanyBySlug;\n\n          if (!result) {\n            _context3.next = 8;\n            break;\n          }\n\n          _context3.next = 8;\n          return put(getCompanyBySlugSuccess(result));\n\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\nexport function getNewestCompanySaga(payload) {\n  var variables, response, _ref4, result;\n\n  return _regeneratorRuntime.wrap(function getNewestCompanySaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          variables = payload.payload;\n          _context4.next = 3;\n          return call(services.getAllCompany, variables);\n\n        case 3:\n          response = _context4.sent;\n          _ref4 = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref4.getCompanies;\n\n          if (!result) {\n            _context4.next = 8;\n            break;\n          }\n\n          _context4.next = 8;\n          return put(getNewestCompanySuccess(result));\n\n        case 8:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\nexport function getMostViewCompanySaga(payload) {\n  var variables, response, _ref5, result;\n\n  return _regeneratorRuntime.wrap(function getMostViewCompanySaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          variables = payload.payload;\n          _context5.next = 3;\n          return call(services.getAllCompany, variables);\n\n        case 3:\n          response = _context5.sent;\n          _ref5 = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref5.getCompanies;\n\n          if (!result) {\n            _context5.next = 8;\n            break;\n          }\n\n          _context5.next = 8;\n          return put(getMostViewCompanySuccess(result));\n\n        case 8:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\nexport function getMostAppliedCompanySaga(payload) {\n  var variables, response, _ref6, result;\n\n  return _regeneratorRuntime.wrap(function getMostAppliedCompanySaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          variables = payload.payload;\n          _context6.next = 3;\n          return call(services.getAllCompany, variables);\n\n        case 3:\n          response = _context6.sent;\n          _ref6 = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref6.getCompanies;\n\n          if (!result) {\n            _context6.next = 8;\n            break;\n          }\n\n          _context6.next = 8;\n          return put(getMostAppliedCompanySuccess(result));\n\n        case 8:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\nexport function getMostRecruitingCompanySaga(payload) {\n  var variables, response, _ref7, result;\n\n  return _regeneratorRuntime.wrap(function getMostRecruitingCompanySaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          variables = payload.payload;\n          _context7.next = 3;\n          return call(services.getAllCompany, variables);\n\n        case 3:\n          response = _context7.sent;\n          _ref7 = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref7.getCompanies;\n\n          if (!result) {\n            _context7.next = 8;\n            break;\n          }\n\n          _context7.next = 8;\n          return put(getMostRecruitingCompanySuccess(result));\n\n        case 8:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\nexport function updateCompanySaga(payload) {\n  var variables, response, _ref8, result;\n\n  return _regeneratorRuntime.wrap(function updateCompanySaga$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          variables = payload.payload;\n          _context8.next = 3;\n          return call(services.updateCompany, variables);\n\n        case 3:\n          response = _context8.sent;\n          _ref8 = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref8.updateCompany;\n\n          if (!result) {\n            _context8.next = 8;\n            break;\n          }\n\n          _context8.next = 8;\n          return put(actionSuccess());\n\n        case 8:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\nexport function updateCompanyProvinceSaga(payload) {\n  var variables, response, _ref9, result;\n\n  return _regeneratorRuntime.wrap(function updateCompanyProvinceSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          variables = payload.payload;\n          _context9.next = 3;\n          return call(services.updateCompanyProvince, variables);\n\n        case 3:\n          response = _context9.sent;\n          _ref9 = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref9.updateCompanyProvince;\n\n          if (!result) {\n            _context9.next = 8;\n            break;\n          }\n\n          _context9.next = 8;\n          return put(actionSuccess());\n\n        case 8:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\nexport function setSubscribeCompanySaga(payload) {\n  var variables, response, _ref10, result;\n\n  return _regeneratorRuntime.wrap(function setSubscribeCompanySaga$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          variables = payload.payload;\n          _context10.next = 3;\n          return call(services.setSubscribeCompany, variables);\n\n        case 3:\n          response = _context10.sent;\n          _ref10 = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref10.setSubscribedCompany;\n\n          if (!result) {\n            _context10.next = 8;\n            break;\n          }\n\n          _context10.next = 8;\n          return put(actionSuccess());\n\n        case 8:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\nexport function setSeenCompanySaga(payload) {\n  var variables, response, _ref11, result;\n\n  return _regeneratorRuntime.wrap(function setSeenCompanySaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          variables = payload.payload;\n          _context11.next = 3;\n          return call(services.setSeenCompany, variables);\n\n        case 3:\n          response = _context11.sent;\n          _ref11 = (response === null || response === void 0 ? void 0 : response.data) || {}, result = _ref11.setSeenCompany;\n\n          if (!result) {\n            _context11.next = 7;\n            break;\n          }\n\n          return _context11.abrupt(\"return\", true);\n\n        case 7:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}","map":null,"metadata":{},"sourceType":"module"}