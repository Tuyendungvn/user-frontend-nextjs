{"ast":null,"code":"import _regeneratorRuntime from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($createRequestReviewInput: CreateRequestReviewInput) {\\n    createRequestReview(createRequestReviewInput: $createRequestReviewInput) {\\n      _id\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query($userId: String!) {\\n    getEvaluateByUser(userId: $userId) {\\n      _id\\n      evaluator {\\n        company {\\n          name\\n          career {\\n            name\\n          }\\n          location\\n          logo {\\n            default\\n            small\\n            medium\\n          }\\n        }\\n      }\\n      answer1 {\\n        name\\n        point\\n      }\\n      answer2 {\\n        name\\n        point\\n      }\\n      answer3 {\\n        name\\n        point\\n      }\\n      answer4 {\\n        name\\n        point\\n      }\\n      answer5 {\\n        name\\n        point\\n      }\\n      answer6 {\\n        name\\n        point\\n      }\\n      answer7 {\\n        name\\n        point\\n      }\\n      answer8 {\\n        name\\n        point\\n      }\\n      answer9 {\\n        name\\n        point\\n      }\\n      answer10 {\\n        name\\n        point\\n      }\\n      avgPoint\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($filterRequestReview: FilterRequestReview, $page: Int, $size: Int) {\\n    getAllRequestReview(\\n      filterRequestReview: $filterRequestReview\\n      page: $page\\n      size: $size\\n    ) {\\n      results {\\n        _id\\n        candidate {\\n          _id\\n          email\\n        }\\n        employer {\\n          company {\\n            _id\\n            name\\n            career {\\n              name\\n            }\\n            location\\n            logo {\\n              default\\n              small\\n              medium\\n            }\\n          }\\n          email\\n        }\\n        status\\n        evaluate {\\n          answer1 {\\n            name\\n            point\\n          }\\n          answer2 {\\n            name\\n            point\\n          }\\n          answer3 {\\n            name\\n            point\\n          }\\n          answer4 {\\n            name\\n            point\\n          }\\n          answer5 {\\n            name\\n            point\\n          }\\n          answer6 {\\n            name\\n            point\\n          }\\n          answer7 {\\n            name\\n            point\\n          }\\n          answer8 {\\n            name\\n            point\\n          }\\n          answer9 {\\n            name\\n            point\\n          }\\n          answer10 {\\n            name\\n            point\\n          }\\n          avgPoint\\n        }\\n      }\\n      totalCount\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from \"apollo-boost\";\nimport { graphQLCommon } from \"@common/utils/api\";\nvar GET_ALL_REQUEST_REVIEW = gql(_templateObject());\nexport var getAllRequestReview = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(variable) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return graphQLCommon(GET_ALL_REQUEST_REVIEW, variable);\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getAllRequestReview(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar GET_EVALUATE_BY_USER = gql(_templateObject2());\nexport var getEvaluateByUser = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(variable) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return graphQLCommon(GET_EVALUATE_BY_USER, variable);\n\n          case 2:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getEvaluateByUser(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar CREATE_REQUEST_REVIEW = gql(_templateObject3());\nexport var createRequestReview = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(variable) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return graphQLCommon(CREATE_REQUEST_REVIEW, variable);\n\n          case 2:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function createRequestReview(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}