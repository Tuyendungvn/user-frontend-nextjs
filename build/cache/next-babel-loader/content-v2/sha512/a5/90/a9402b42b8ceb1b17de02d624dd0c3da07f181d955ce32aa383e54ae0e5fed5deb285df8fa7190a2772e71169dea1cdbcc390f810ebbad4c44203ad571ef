{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useRouter } from \"next/router\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport dayjs from \"dayjs\";\nimport { isEmpty } from \"lodash\";\nimport RelatedJob from \"@components/RelatedJob\";\nimport Table from \"@designs/Table\";\nimport { SVG } from \"@designs/SVG\";\nimport { Container, EmptyJob, Detail, Text, Title, WrapTable } from \"./style\";\nimport { getBestRecruitment } from \"@redux/actions/recruitment\";\nimport { getRecordByUserId } from \"@redux/actions/record\";\nimport { getAllCompany } from \"@redux/actions/company\";\nimport { useRedirect } from \"@common/hooks/useRedirect\";\nimport { PATH } from \"@routes\";\nvar SIZE_PER_PAGE = 5;\n\nvar EmployerViewProfile = function EmployerViewProfile() {\n  var redirect = useRedirect();\n\n  var _useSelector = useSelector(function (state) {\n    return state.record;\n  }),\n      record = _useSelector.record;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.recruitment;\n  }),\n      bestRecruitment = _useSelector2.bestRecruitment.results;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.company;\n  }),\n      _useSelector3$allComp = _useSelector3.allCompany,\n      _useSelector3$allComp2 = _useSelector3$allComp.results,\n      results = _useSelector3$allComp2 === void 0 ? [] : _useSelector3$allComp2,\n      _useSelector3$allComp3 = _useSelector3$allComp.loading,\n      loading = _useSelector3$allComp3 === void 0 ? true : _useSelector3$allComp3;\n\n  var employerSeenRecord = (record === null || record === void 0 ? void 0 : record.employerSeenRecord) || [];\n\n  var _useSelector4 = useSelector(function (state) {\n    return state.auth;\n  }),\n      currentUser = _useSelector4.currentUser;\n\n  var _useTranslation = useTranslation([\"job-management\"]),\n      t = _useTranslation.t;\n\n  var dispatch = useDispatch();\n  var query = useRouter().query;\n\n  var _query$page = query.page,\n      _page = _query$page === void 0 ? 1 : _query$page;\n\n  var _useState = useState(),\n      companyId = _useState[0],\n      setCompanyId = _useState[1];\n\n  var page = Number(_page);\n  useEffect(function () {\n    getBestRecruitmentAPI();\n  }, []);\n  useEffect(function () {\n    if (!isEmpty(currentUser)) {\n      getAllCompanyAPI();\n      getRecordByUserIdAPI();\n    }\n  }, [currentUser]);\n  useEffect(function () {\n    if (companyId) {\n      var slug = \"\";\n      results === null || results === void 0 ? void 0 : results.map(function (company) {\n        if ((company === null || company === void 0 ? void 0 : company._id) === companyId) {\n          slug = company === null || company === void 0 ? void 0 : company.slug;\n        }\n      });\n\n      if (slug) {\n        redirect(PATH.COMPANY_DETAIL, {\n          slug: slug\n        });\n      }\n    }\n  }, [companyId]);\n\n  var getAllCompanyAPI = function getAllCompanyAPI() {\n    dispatch(getAllCompany({}));\n  };\n\n  var getRecordByUserIdAPI = function getRecordByUserIdAPI() {\n    var _currentUser$userInfo;\n\n    var payload = {\n      userId: currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$userInfo = currentUser.userInfo) === null || _currentUser$userInfo === void 0 ? void 0 : _currentUser$userInfo._id\n    };\n    dispatch(getRecordByUserId(payload));\n  };\n\n  var getBestRecruitmentAPI = function getBestRecruitmentAPI() {\n    var payload = {\n      size: 6\n    };\n    dispatch(getBestRecruitment(payload));\n  };\n\n  var renderDetail = function renderDetail(record) {\n    return /*#__PURE__*/_jsx(Detail, {\n      onClick: function onClick() {\n        var _record$employer, _record$employer$comp;\n\n        return setCompanyId(record === null || record === void 0 ? void 0 : (_record$employer = record.employer) === null || _record$employer === void 0 ? void 0 : (_record$employer$comp = _record$employer.company) === null || _record$employer$comp === void 0 ? void 0 : _record$employer$comp._id);\n      },\n      children: t(\"view-detail\")\n    });\n  };\n\n  var handleChangePage = function handleChangePage(newPage) {\n    redirect(PATH.JOB_MANAGEMENT_EMPLOYER_VIEW_PROFILE, undefined, {\n      page: newPage\n    });\n  };\n\n  var Column = useMemo(function () {\n    return [{\n      text: \"STT\",\n      formatter: function formatter(_, record, index) {\n        return index;\n      }\n    }, {\n      text: t(\"name-of-employer\"),\n      dataField: \"employer.displayName\"\n    }, {\n      text: t(\"day-seen\"),\n      dataField: \"daySeen\",\n      formatter: function formatter(_, record) {\n        return dayjs(record.date).format(\"DD-MM-YYYY\");\n      }\n    }, {\n      text: t(\"time-seen\"),\n      dataField: \"views\"\n    }, {\n      text: t(\"infomation-of-employer\"),\n      formatter: function formatter(_, record) {\n        return renderDetail(record);\n      }\n    }];\n  }, [page]);\n  return /*#__PURE__*/_jsxs(Container, {\n    children: [/*#__PURE__*/_jsxs(WrapTable, {\n      children: [/*#__PURE__*/_jsx(Title, {\n        children: t(\"employer-view-profile\")\n      }), employerSeenRecord.length > 0 ? /*#__PURE__*/_jsx(Table, {\n        columns: Column,\n        data: employerSeenRecord,\n        page: page,\n        totalSize: employerSeenRecord === null || employerSeenRecord === void 0 ? void 0 : employerSeenRecord.length,\n        sizePerPage: SIZE_PER_PAGE,\n        className: \"mb-2\",\n        onPageChange: handleChangePage\n      }) : /*#__PURE__*/_jsxs(EmptyJob, {\n        children: [/*#__PURE__*/_jsx(SVG, {\n          name: \"job-management/manager-image\",\n          width: 148,\n          height: 148\n        }), /*#__PURE__*/_jsx(Text, {\n          children: t(\"notification-empty-seen\")\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(RelatedJob, {\n      bestRecruitment: bestRecruitment,\n      title: t(\"favorite-job\")\n    })]\n  });\n};\n\nexport default EmployerViewProfile;","map":null,"metadata":{},"sourceType":"module"}