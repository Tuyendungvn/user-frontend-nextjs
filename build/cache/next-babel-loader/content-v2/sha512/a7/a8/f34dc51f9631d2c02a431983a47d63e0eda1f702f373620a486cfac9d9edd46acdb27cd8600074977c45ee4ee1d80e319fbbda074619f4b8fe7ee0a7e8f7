{"ast":null,"code":"import _defineProperty from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _objectWithoutProperties from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ButtonContainer } from \"./styles\";\nimport Spinner from \"@designs/icons/Spinner\";\n\nvar Button = function Button(props) {\n  var primary = props.primary,\n      children = props.children,\n      className = props.className,\n      loading = props.loading,\n      _props$innerClassName = props.innerClassName,\n      innerClassName = _props$innerClassName === void 0 ? \"\" : _props$innerClassName,\n      rest = _objectWithoutProperties(props, [\"primary\", \"children\", \"className\", \"loading\", \"innerClassName\"]);\n\n  return /*#__PURE__*/_jsxs(ButtonContainer, _objectSpread(_objectSpread({\n    loading: loading,\n    className: className,\n    primary: primary\n  }, rest), {}, {\n    children: [loading && /*#__PURE__*/_jsx(Spinner, {\n      className: \"mr-1 text-white\"\n    }), children]\n  }));\n};\n\nexport default Button;","map":null,"metadata":{},"sourceType":"module"}