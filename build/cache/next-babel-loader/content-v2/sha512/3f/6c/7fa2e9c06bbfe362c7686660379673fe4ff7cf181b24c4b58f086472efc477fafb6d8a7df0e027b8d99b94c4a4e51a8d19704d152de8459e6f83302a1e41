{"ast":null,"code":"import { graphQLCommon } from \"@common/utils/api\";\nimport { gql } from \"apollo-boost\";\nconst schedule = `\n    _id\n    positionInterview\n    scheduleType\n    scheduleTime\n    scheduleLocation\n    interviewerName\n    interviewerPhone\n    interviewerEmail\n    receiver{\n      _id\n      displayName\n    }\n    company{\n      _id\n      name\n    }\n    recruitment{\n      _id\n    }\n    isConfirmFromReceiver\n    status\n`;\nconst GET_ALL_SCHEDULE_INTERVIEW = gql`\n    query($filterScheduleInterview: FilterScheduleInterview, $page: Int, $size: Int) {\n      getAllScheduleInterview(filterScheduleInterview: $filterScheduleInterview, page:$page, size:$size){\n        totalCount\n        results{\n         ${schedule}\n        }\n      }\n    }\n`;\nexport const getAllScheduleInterview = async (variables) => {\n  const result = await graphQLCommon(GET_ALL_SCHEDULE_INTERVIEW, variables);\n  return result;\n};\nconst GET_SCHEDULE_INTERVIEW_BY_ID = gql`\n    query($id: String!) {\n        getScheduleInterviewById(id: $id) {\n          ${schedule}\n        }\n    }\n`;\nexport const getScheduleInterviewById = async (variables) => {\n  const result = await graphQLCommon(GET_SCHEDULE_INTERVIEW_BY_ID, variables);\n  return result;\n};\nconst UPDATE_SCHEDULE_INTERVIEW = gql`\n  mutation($id: String!, $input: ScheduleInterviewInput!) {\n    updateScheduleInterview(id: $id, input: $input) {\n      _id\n    }\n  }\n`;\nexport const updateScheduleInterview = async (variables) => {\n  const response = await graphQLCommon(UPDATE_SCHEDULE_INTERVIEW, variables);\n  return response;\n};\nconst CREATE_SCHEDULE_INTERVIEW = gql`\n  mutation($input: ScheduleInterviewInput!) {\n    createScheduleInterview(input: $input) {\n      _id\n    }\n  }\n`;\nexport const createScheduleInterview = async (variables) => {\n  const response = await graphQLCommon(CREATE_SCHEDULE_INTERVIEW, variables);\n  return response;\n};\nconst CONFIRM_THE_SCHEDULE_INTERVIEW = gql`\n  mutation($id: String!) {\n    confirmTheScheduleInterview(id: $id)\n  }\n`;\nexport const confirmTheScheduleInterview = async (variables) => {\n  const response = await graphQLCommon(CONFIRM_THE_SCHEDULE_INTERVIEW, variables);\n  return response;\n};\nconst CANCEL_THE_SCHEDULE_INTERVIEW = gql`\n  mutation($id: String!) {\n    cancelTheScheduleInterview(id: $id)\n  }\n`;\nexport const cancelTheScheduleInterview = async (variables) => {\n  const response = await graphQLCommon(CANCEL_THE_SCHEDULE_INTERVIEW, variables);\n  return response;\n};","map":null,"metadata":{},"sourceType":"module"}