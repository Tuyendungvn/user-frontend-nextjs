{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _defineProperty from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * @note read the document in /src/docs/designs/Table.md.\n * You should read it in gitlab.\n */\nimport React, { memo } from \"react\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport Pagination from \"@components/Pagination\";\n\nvar TableCustom = function TableCustom(_ref) {\n  var _ref$className = _ref.className,\n      className = _ref$className === void 0 ? \"\" : _ref$className,\n      data = _ref.data,\n      columns = _ref.columns,\n      headerElement = _ref.headerElement,\n      _ref$sizePerPage = _ref.sizePerPage,\n      sizePerPage = _ref$sizePerPage === void 0 ? 10 : _ref$sizePerPage,\n      onPageChange = _ref.onPageChange,\n      _ref$page = _ref.page,\n      page = _ref$page === void 0 ? 1 : _ref$page,\n      _ref$isRemote = _ref.isRemote,\n      isRemote = _ref$isRemote === void 0 ? false : _ref$isRemote,\n      _ref$totalSize = _ref.totalSize,\n      totalSize = _ref$totalSize === void 0 ? 0 : _ref$totalSize,\n      onClickRow = _ref.onClickRow,\n      onTableChange = _ref.onTableChange;\n\n  var handleChangePage = function handleChangePage(nextPage) {\n    onPageChange && onPageChange(nextPage + 1);\n  };\n\n  var handleTableChange = function handleTableChange(type, _ref2) {\n    var page = _ref2.page,\n        sizePerPage = _ref2.sizePerPage;\n    var newPage = page - 1;\n    onTableChange && onTableChange(newPage);\n  };\n\n  var handleEmptyData = function handleEmptyData() {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: \"empty-data\"\n    });\n  };\n\n  var rowEvents = {\n    onClick: function onClick(rowIndex) {\n      onClickRow && onClickRow(rowIndex);\n    }\n  };\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"custom-table__container \".concat(className),\n      children: /*#__PURE__*/_jsx(ToolkitProvider, {\n        bootstrap4: true,\n        keyField: \"id\",\n        data: data,\n        columns: columns,\n        search: true,\n        children: function children(props) {\n          return /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              children: headerElement\n            }), /*#__PURE__*/_jsx(BootstrapTable, _objectSpread(_objectSpread({}, props.baseProps), {}, {\n              bordered: false,\n              wrapperClasses: \"table-responsive col-span-12 overflow-auto lg:overflow-visible\",\n              noDataIndication: handleEmptyData,\n              rowEvents: rowEvents,\n              remote: isRemote && {\n                pagination: true,\n                filter: false,\n                sort: false\n              },\n              pagination: paginationFactory({\n                hideSizePerPage: true,\n                custom: true,\n                totalSize: totalSize,\n                sizePerPage: sizePerPage,\n                page: page\n              }),\n              onTableChange: handleTableChange\n            }))]\n          });\n        }\n      })\n    }), /*#__PURE__*/_jsx(Pagination, {\n      page: page - 1,\n      totalSize: totalSize,\n      sizePerPage: sizePerPage,\n      onPageChange: handleChangePage\n    })]\n  });\n};\n\nexport default /*#__PURE__*/memo(TableCustom);","map":null,"metadata":{},"sourceType":"module"}