{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useTranslation } from \"next-i18next\";\nimport Button from \"@designs/Button\";\nimport Select from \"@designs/MultiSelect\";\nimport Input from \"@designs/Input\";\nimport GroupSelect from \"@designs/GroupSelect\";\nimport Benefit from \"../../../Benefit\";\nimport { ButtonWrapper, Form, BenefitWrapper, Label } from \"./styles\";\n\nvar EditDesiredJobForm = function EditDesiredJobForm(props) {\n  var formik = props.formik,\n      initialValues = props.initialValues,\n      onSelected = props.onSelected,\n      handleCloseDialog = props.handleCloseDialog,\n      isLoading = props.isLoading,\n      provinces = props.provinces,\n      benefits = props.benefits,\n      handleSelectBenefits = props.handleSelectBenefits,\n      allJobLevel = props.allJobLevel,\n      categoryLevel1 = props.categoryLevel1,\n      categoryLevel2 = props.categoryLevel2;\n\n  var _useTranslation = useTranslation([\"job-management\", \"common\"]),\n      t = _useTranslation.t;\n\n  return /*#__PURE__*/_jsxs(Form, {\n    children: [/*#__PURE__*/_jsx(Select, {\n      label: t(\"personal-info.desired-job.work-location\"),\n      options: provinces,\n      defaultValue: initialValues.workLocation,\n      placeholder: t(\"personal-info.desired-job.work-location-validation\"),\n      required: true,\n      onChangeSelect: onSelected(\"workLocation\", formik),\n      touched: formik.touched[\"workLocation\"],\n      error: formik.errors[\"workLocation\"]\n    }), /*#__PURE__*/_jsx(GroupSelect, {\n      label: t(\"personal-info.desired-job.career\"),\n      groupLabel: categoryLevel1,\n      groupOption: categoryLevel2,\n      initValue: initialValues.jobDesired,\n      placeholder: t(\"personal-info.desired-job.career-placeholder\"),\n      isMulti: true,\n      limit: 3,\n      onChangeSelect: onSelected(\"jobDesired\", formik),\n      touched: formik.touched[\"jobDesired\"],\n      error: formik.errors[\"jobDesired\"]\n    }), /*#__PURE__*/_jsx(Select, {\n      label: t(\"personal-info.desired-job.desired-level\"),\n      defaultValue: initialValues.levelDesired,\n      options: allJobLevel,\n      placeholder: t(\"personal-info.desired-job.desired-level-validation\"),\n      required: true,\n      onChangeSelect: onSelected(\"levelDesired\", formik),\n      touched: formik.touched[\"levelDesired\"],\n      error: formik.errors[\"levelDesired\"]\n    }), /*#__PURE__*/_jsx(Input, _objectSpread(_objectSpread({\n      label: t(\"personal-info.desired-job.salary\"),\n      placeholder: t(\"personal-info.desired-job.salary-placeholder\"),\n      type: \"number\",\n      required: true\n    }, formik.getFieldProps(\"salaryDesired\")), formik.getFieldMeta(\"salaryDesired\"))), /*#__PURE__*/_jsx(Label, {\n      children: t(\"personal-info.desired-job.top-5-desired-benefits\")\n    }), /*#__PURE__*/_jsx(BenefitWrapper, {\n      children: benefits.map(function (benefit, index) {\n        return /*#__PURE__*/_jsx(Benefit, {\n          name: benefit === null || benefit === void 0 ? void 0 : benefit.name,\n          enabled: benefit === null || benefit === void 0 ? void 0 : benefit.enabled,\n          icon: benefit === null || benefit === void 0 ? void 0 : benefit.icon,\n          id: benefit === null || benefit === void 0 ? void 0 : benefit._id,\n          onClick: handleSelectBenefits\n        }, index);\n      })\n    }), /*#__PURE__*/_jsxs(ButtonWrapper, {\n      children: [/*#__PURE__*/_jsx(Button, {\n        type: \"button\",\n        onClick: handleCloseDialog,\n        className: \"w-1/2 border border-solid border-primary\",\n        children: t(\"common:dialog.cancel\")\n      }), /*#__PURE__*/_jsx(Button, {\n        loading: isLoading,\n        primary: true,\n        type: \"submit\",\n        className: \"w-1/2\",\n        children: !isLoading && t(\"common:dialog.save\")\n      })]\n    })]\n  });\n};\n\nexport default EditDesiredJobForm;","map":null,"metadata":{},"sourceType":"module"}