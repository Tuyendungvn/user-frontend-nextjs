{"ast":null,"code":"import { call, put } from \"redux-saga/effects\";\nimport { setLoading } from \"@redux/actions/common\";\nimport { getAllJobTypeSuccess, getAllJobLevelSuccess, getAllLevelPriceSuccess } from \"@redux/actions/job\";\nimport * as services from \"@services/job\";\nexport function* getAllJobTypeSaga(payload) {\n  const variables = payload.payload;\n  yield put(setLoading(true));\n  const response = yield call(services.getAllJobType, variables);\n  yield put(setLoading(false));\n  const {\n    getAllJobType: results\n  } = (response === null || response === void 0 ? void 0 : response.data) || {};\n\n  if (results) {\n    yield put(getAllJobTypeSuccess(results));\n  }\n}\nexport function* getAllJobLevelSaga(payload) {\n  const variables = payload.payload;\n  yield put(setLoading(true));\n  const response = yield call(services.getAllJobLevel, variables);\n  yield put(setLoading(false));\n  const {\n    getAllJobLevel: result\n  } = (response === null || response === void 0 ? void 0 : response.data) || {};\n\n  if (result) {\n    yield put(getAllJobLevelSuccess(result));\n  }\n}\nexport function* getAllLevelPriceSaga(payload) {\n  const variables = payload.payload;\n  yield put(setLoading(true));\n  const response = yield call(services.getAllLevelPrice, variables);\n  yield put(setLoading(false));\n  const {\n    filterLevelPrice: results\n  } = (response === null || response === void 0 ? void 0 : response.data) || {};\n\n  if (results) {\n    yield put(getAllLevelPriceSuccess(results));\n  }\n}","map":null,"metadata":{},"sourceType":"module"}