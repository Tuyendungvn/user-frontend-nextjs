{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _toConsumableArray from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { Fragment } from \"react\";\nimport { useTranslation } from \"next-i18next\";\nimport { Transition } from \"@headlessui/react\";\nimport { formatParams } from \"@common/functions\";\nimport { useDebouncedSearch } from \"@common/hooks/useDebounced\";\nimport AutoComplete from \"@designs/AutoComplete\";\nimport { SVG } from \"@designs/SVG\";\nimport { Button, Dropdown, DropdownItem, Form, Input, ListBoxItem, ListBoxMenu, SearchBoxContainer, SearchIcon, TextField } from \"./styles\";\n\nvar SearchBox = function SearchBox(props) {\n  var _props$className = props.className,\n      className = _props$className === void 0 ? \"\" : _props$className,\n      onFetchData = props.onFetchData,\n      onSelect = props.onSelect,\n      renderDropdownItem = props.renderDropdownItem,\n      onSubmit = props.onSubmit,\n      _props$value = props.value,\n      value = _props$value === void 0 ? \"\" : _props$value;\n\n  var _useTranslation = useTranslation([\"common\"]),\n      t = _useTranslation.t;\n\n  var fullQuery = useRouter().query || {};\n  var _province = fullQuery.p;\n  var queryProvince = formatParams(decodeURIComponent(_province || \"\"));\n\n  var _useDebouncedSearch = useDebouncedSearch(onFetchData),\n      inputText = _useDebouncedSearch.inputText,\n      setInputText = _useDebouncedSearch.setInputText,\n      searchResults = _useDebouncedSearch.searchResults;\n\n  var _useSelector = useSelector(function (state) {\n    return state.location;\n  }),\n      provinces = _useSelector.provinces;\n\n  var _useState = useState([]),\n      suggestions = _useState[0],\n      setSuggestions = _useState[1];\n\n  var _useState2 = useState(false),\n      isOpenDropdown = _useState2[0],\n      setIsOpenDropdown = _useState2[1];\n\n  var _useState3 = useState(-1),\n      itemIndexActive = _useState3[0],\n      setItemIndexActive = _useState3[1];\n\n  var _useState4 = useState({}),\n      provinceSelected = _useState4[0],\n      setProvinceSelected = _useState4[1];\n\n  var _useState5 = useState([]),\n      listProvince = _useState5[0],\n      setListProvince = _useState5[1];\n\n  useEffect(function () {\n    if (value) {\n      setInputText(value);\n    } else {\n      setInputText(\"\");\n    }\n  }, [value]);\n  useEffect(function () {\n    if (searchResults !== null && searchResults !== void 0 && searchResults.result) {\n      setSuggestions(searchResults.result || []);\n      setItemIndexActive(-1);\n    }\n  }, [searchResults === null || searchResults === void 0 ? void 0 : searchResults.result]);\n  useEffect(function () {\n    addOptionToProvince();\n  }, [provinces]);\n  useEffect(function () {\n    if (queryProvince) {\n      var _provinceSelected = listProvince.find(function (item) {\n        return (item === null || item === void 0 ? void 0 : item.slug) === queryProvince;\n      });\n\n      setProvinceSelected(_provinceSelected);\n    } else {\n      setProvinceSelected(listProvince[0]);\n    }\n  }, [listProvince, fullQuery]);\n\n  var handleSubmit = function handleSubmit(e) {\n    if (itemIndexActive >= 0) {\n      onSelect(suggestions[itemIndexActive]);\n    }\n\n    onSubmit && onSubmit(inputText, provinceSelected === null || provinceSelected === void 0 ? void 0 : provinceSelected.slug);\n    e.preventDefault();\n    setIsOpenDropdown(false);\n  };\n\n  var handleChange = function handleChange(e) {\n    // onChange && onChange(value);\n    setInputText(e.target.value || \"\");\n  };\n\n  var handleKeydown = function handleKeydown(e) {\n    switch (e.key) {\n      case \"ArrowDown\":\n        {\n          if (itemIndexActive < (suggestions === null || suggestions === void 0 ? void 0 : suggestions.length) - 1) setItemIndexActive(function (prev) {\n            return prev + 1;\n          });\n          break;\n        }\n\n      case \"ArrowUp\":\n        {\n          if (itemIndexActive > 0) setItemIndexActive(function (prev) {\n            return prev - 1;\n          });\n          break;\n        }\n    }\n  };\n\n  var handleSelectProvince = function handleSelectProvince(option) {\n    setProvinceSelected(option);\n    onSubmit && onSubmit(inputText, option === null || option === void 0 ? void 0 : option.slug);\n  };\n\n  var addOptionToProvince = function addOptionToProvince() {\n    var draftArray = _toConsumableArray(provinces);\n\n    var allProvince = {\n      name: t(\"filter-all-location\")\n    };\n    draftArray.unshift(allProvince);\n    setListProvince(draftArray);\n  };\n\n  var handleFocus = function handleFocus() {\n    if ((suggestions === null || suggestions === void 0 ? void 0 : suggestions.length) > 0) {\n      setIsOpenDropdown(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(SearchBoxContainer, {\n    className: className,\n    children: /*#__PURE__*/_jsxs(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxs(TextField, {\n        children: [/*#__PURE__*/_jsx(SearchIcon, {\n          className: \"text-black\"\n        }), /*#__PURE__*/_jsx(Input, {\n          placeholder: t(\"search-company-placeholder\"),\n          onChange: handleChange,\n          onFocus: handleFocus,\n          value: inputText,\n          onBlur: function onBlur() {\n            return setIsOpenDropdown(false);\n          },\n          onKeyDown: handleKeydown\n        }), /*#__PURE__*/_jsx(Transition, {\n          show: isOpenDropdown,\n          as: Fragment,\n          enter: \"transition ease-out duration-100\",\n          enterFrom: \"transform opacity-0 \",\n          enterTo: \"transform opacity-100 \",\n          leave: \"transition ease-in duration-75\",\n          leaveFrom: \"transform opacity-100 \",\n          leaveTo: \"transform opacity-0\",\n          children: /*#__PURE__*/_jsx(Dropdown, {\n            children: suggestions.map(function (suggestion, index) {\n              return /*#__PURE__*/_jsx(DropdownItem, {\n                active: index === itemIndexActive,\n                onMouseEnter: function onMouseEnter() {\n                  return setItemIndexActive(index);\n                },\n                onMouseLeave: function onMouseLeave() {\n                  return setItemIndexActive(-1);\n                },\n                children: renderDropdownItem(suggestion)\n              }, index);\n            })\n          })\n        })]\n      }), /*#__PURE__*/_jsx(AutoComplete, {\n        className: \"w-full laptop:w-26.5\",\n        MenuButton: /*#__PURE__*/_jsxs(ListBoxMenu, {\n          children: [/*#__PURE__*/_jsx(SVG, {\n            name: \"common/location\",\n            width: \"24\",\n            height: \"24\"\n          }), provinceSelected === null || provinceSelected === void 0 ? void 0 : provinceSelected.name]\n        }),\n        fieldToSearch: [\"name\", \"nameEn\"],\n        onChange: handleSelectProvince,\n        optionSelected: provinceSelected,\n        options: listProvince,\n        renderItem: function renderItem(option) {\n          return /*#__PURE__*/_jsx(ListBoxItem, {\n            children: option === null || option === void 0 ? void 0 : option.name\n          });\n        }\n      }), /*#__PURE__*/_jsx(Button, {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsx(\"p\", {\n          className: \"hidden phone:block\",\n          children: t(\"search-box.search\")\n        })\n      })]\n    })\n  });\n};\n\nexport default SearchBox;","map":null,"metadata":{},"sourceType":"module"}