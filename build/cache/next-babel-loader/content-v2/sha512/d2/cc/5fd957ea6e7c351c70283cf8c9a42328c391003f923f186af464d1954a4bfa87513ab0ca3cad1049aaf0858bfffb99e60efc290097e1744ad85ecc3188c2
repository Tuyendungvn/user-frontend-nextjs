{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { Transition, Listbox } from \"@headlessui/react\";\nimport Fuse from \"fuse.js\";\nimport { Input, InputWrapper, ListboxButton, ListboxOptions, ListOptions, Button } from \"./styles\";\nimport { SVG } from \"@designs/SVG\";\n\nvar ListBox = function ListBox(props) {\n  var _props$innerClassName = props.innerClassName,\n      innerClassName = _props$innerClassName === void 0 ? \"\" : _props$innerClassName,\n      _props$className = props.className,\n      className = _props$className === void 0 ? \"\" : _props$className,\n      MenuButton = props.MenuButton,\n      optionSelected = props.optionSelected,\n      _props$fieldToSearch = props.fieldToSearch,\n      fieldToSearch = _props$fieldToSearch === void 0 ? [\"name\"] : _props$fieldToSearch,\n      options = props.options,\n      renderItem = props.renderItem,\n      onChange = props.onChange,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled;\n\n  var _useState = useState(\"\"),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var _useState2 = useState([]),\n      listData = _useState2[0],\n      setListData = _useState2[1];\n\n  useEffect(function () {\n    if (options.length > 0) {\n      setListData(options || []);\n    }\n  }, [options]);\n  useEffect(function () {\n    if (value) {\n      handleSearch(value);\n    }\n  }, [value]);\n\n  var handleSearch = function handleSearch(value) {\n    var fuseOptions = {\n      includeScore: true,\n      keys: fieldToSearch\n    };\n    var fuse = new Fuse(options, fuseOptions);\n    var searchResult = value && fuse.search(value).map(function (option) {\n      return option.item;\n    }).filter(function (option) {\n      return option.name !== (optionSelected === null || optionSelected === void 0 ? void 0 : optionSelected.name);\n    });\n    setListData(searchResult || []);\n  };\n\n  var handleChange = function handleChange(e) {\n    setValue(e.target.value);\n  };\n\n  var onChangeSelected = function onChangeSelected(value) {\n    setValue(\"\");\n    onChange && onChange(value);\n    setListData(options || []);\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: className,\n    children: /*#__PURE__*/_jsx(Listbox, {\n      value: optionSelected,\n      onChange: onChangeSelected,\n      disabled: disabled,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"relative \".concat(innerClassName, \" \").concat(disabled && \"opacity-60\"),\n        children: [/*#__PURE__*/_jsx(ListboxButton, {\n          children: MenuButton\n        }), /*#__PURE__*/_jsx(Transition, {\n          as: Fragment,\n          leave: \"transition ease-in duration-100\",\n          leaveFrom: \"opacity-100\",\n          leaveTo: \"opacity-0\",\n          children: /*#__PURE__*/_jsxs(ListboxOptions, {\n            children: [/*#__PURE__*/_jsxs(InputWrapper, {\n              children: [/*#__PURE__*/_jsx(SVG, {\n                name: \"common/search\",\n                width: \"24\",\n                height: \"24\",\n                className: \"block absolute top-1.2 left-3.5\"\n              }), /*#__PURE__*/_jsx(Input, {\n                autoComplete: \"off\",\n                value: value,\n                name: \"name\",\n                onChange: handleChange,\n                onKeyDown: function onKeyDown(e) {\n                  if (![\"Enter\", \"Esc\", \"Home\", \"End\", \"ArrowUp\", \"ArrowDown\"].includes(e.key)) {\n                    e.stopPropagation();\n                  }\n                }\n              })]\n            }), /*#__PURE__*/_jsx(ListOptions, {\n              children: listData.map(function (option, index) {\n                return /*#__PURE__*/_jsx(Listbox.Option, {\n                  value: option,\n                  className: \"px-1\",\n                  children: function children(_ref) {\n                    var selected = _ref.selected,\n                        active = _ref.active;\n                    return /*#__PURE__*/_jsx(Button, {\n                      active: active,\n                      selected: selected,\n                      children: renderItem(option, selected, active)\n                    });\n                  }\n                }, \"dropdown-i-\".concat(index, \"-\").concat(option === null || option === void 0 ? void 0 : option.name));\n              })\n            })]\n          })\n        })]\n      })\n    })\n  });\n};\n\nexport default ListBox;","map":null,"metadata":{},"sourceType":"module"}