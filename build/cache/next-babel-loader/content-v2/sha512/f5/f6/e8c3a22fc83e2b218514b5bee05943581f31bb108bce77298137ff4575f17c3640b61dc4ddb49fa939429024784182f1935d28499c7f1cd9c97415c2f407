{"ast":null,"code":"import _regeneratorRuntime from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"/data/source/tuyendungvn-user-frontend-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($id: String!) {\\n    cancelTheScheduleInterview(id: $id)\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($id: String!) {\\n    confirmTheScheduleInterview(id: $id)\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($input: ScheduleInterviewInput!) {\\n    createScheduleInterview(input: $input) {\\n      _id\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($id: String!, $input: ScheduleInterviewInput!) {\\n    updateScheduleInterview(id: $id, input: $input) {\\n      _id\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query($id: String!) {\\n        getScheduleInterviewById(id: $id) {\\n          \", \"\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query($filterScheduleInterview: FilterScheduleInterview, $page: Int, $size: Int) {\\n      getAllScheduleInterview(filterScheduleInterview: $filterScheduleInterview, page:$page, size:$size){\\n        totalCount\\n        results{\\n         \", \"\\n        }\\n      }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { graphQLCommon } from \"@common/utils/api\";\nimport { gql } from \"apollo-boost\";\nvar schedule = \"\\n    _id\\n    positionInterview\\n    scheduleType\\n    scheduleTime\\n    scheduleLocation\\n    interviewerName\\n    interviewerPhone\\n    interviewerEmail\\n    receiver{\\n      _id\\n      displayName\\n    }\\n    company{\\n      _id\\n      name\\n    }\\n    recruitment{\\n      _id\\n    }\\n    isConfirmFromReceiver\\n    status\\n\";\nvar GET_ALL_SCHEDULE_INTERVIEW = gql(_templateObject(), schedule);\nexport var getAllScheduleInterview = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(variables) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return graphQLCommon(GET_ALL_SCHEDULE_INTERVIEW, variables);\n\n          case 2:\n            result = _context.sent;\n            return _context.abrupt(\"return\", result);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getAllScheduleInterview(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar GET_SCHEDULE_INTERVIEW_BY_ID = gql(_templateObject2(), schedule);\nexport var getScheduleInterviewById = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(variables) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return graphQLCommon(GET_SCHEDULE_INTERVIEW_BY_ID, variables);\n\n          case 2:\n            result = _context2.sent;\n            return _context2.abrupt(\"return\", result);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getScheduleInterviewById(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar UPDATE_SCHEDULE_INTERVIEW = gql(_templateObject3());\nexport var updateScheduleInterview = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(variables) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return graphQLCommon(UPDATE_SCHEDULE_INTERVIEW, variables);\n\n          case 2:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function updateScheduleInterview(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar CREATE_SCHEDULE_INTERVIEW = gql(_templateObject4());\nexport var createScheduleInterview = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(variables) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return graphQLCommon(CREATE_SCHEDULE_INTERVIEW, variables);\n\n          case 2:\n            response = _context4.sent;\n            return _context4.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function createScheduleInterview(_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nvar CONFIRM_THE_SCHEDULE_INTERVIEW = gql(_templateObject5());\nexport var confirmTheScheduleInterview = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(variables) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return graphQLCommon(CONFIRM_THE_SCHEDULE_INTERVIEW, variables);\n\n          case 2:\n            response = _context5.sent;\n            return _context5.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function confirmTheScheduleInterview(_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nvar CANCEL_THE_SCHEDULE_INTERVIEW = gql(_templateObject6());\nexport var cancelTheScheduleInterview = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(variables) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return graphQLCommon(CANCEL_THE_SCHEDULE_INTERVIEW, variables);\n\n          case 2:\n            response = _context6.sent;\n            return _context6.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function cancelTheScheduleInterview(_x6) {\n    return _ref6.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}