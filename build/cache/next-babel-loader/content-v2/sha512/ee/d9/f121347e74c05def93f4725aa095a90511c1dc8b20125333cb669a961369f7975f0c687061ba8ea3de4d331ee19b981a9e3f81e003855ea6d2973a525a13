{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useTranslation } from \"next-i18next\";\nimport { useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { ItemV2Container, Content, Action, ExpandButton, DateTime, Company, DetailButton, ButtonWrapper, TextButton } from \"./styles\";\nimport { useRedirect } from \"@common/hooks/useRedirect\";\nimport { PATH } from \"@routes\";\nimport { useDispatch } from \"react-redux\";\nimport { setOpenNotification } from \"@redux/actions/common\";\nimport ScheduleInterviewDialog from \"./Dialog/ScheduleInterviewDialog\";\nimport InvitationApplyDialog from \"./Dialog/InvitationApplyDialog\";\n\nconst Notify = props => {\n  const {\n    notification\n  } = props;\n  const {\n    name,\n    company,\n    description,\n    createdAt,\n    scheduleInterview,\n    invitationApply\n  } = notification || {};\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    t\n  } = useTranslation([\"common\"]);\n  const redirect = useRedirect();\n  const dispatch = useDispatch();\n\n  const handleGetNotify = () => {\n    if (name === \"Evaluated\") {\n      redirect(PATH.JOB_MANAGEMENT_EVALUATED);\n    }\n  };\n\n  const onOpenDialog = () => {\n    setOpen(true);\n    dispatch(setOpenNotification(false));\n  };\n\n  return /*#__PURE__*/_jsxs(ItemV2Container, {\n    children: [/*#__PURE__*/_jsx(Company, {\n      children: company === null || company === void 0 ? void 0 : company.name\n    }), /*#__PURE__*/_jsx(Content, {\n      isOpen: open,\n      children: description\n    }), name === \"Evaluated\" && /*#__PURE__*/_jsx(DetailButton, {\n      onClick: () => handleGetNotify(),\n      children: \"Xem chi ti\\u1EBFt\"\n    }), name === \"Approved\" && null, name === \"Scheduled\" && /*#__PURE__*/_jsxs(ButtonWrapper, {\n      children: [/*#__PURE__*/_jsx(TextButton, {\n        onClick: onOpenDialog,\n        children: \"Xem chi ti\\u1EBFt\"\n      }), /*#__PURE__*/_jsx(ScheduleInterviewDialog, {\n        isOpen: open,\n        scheduleInterviewId: scheduleInterview === null || scheduleInterview === void 0 ? void 0 : scheduleInterview._id,\n        onClose: () => setOpen(false)\n      })]\n    }), name === \"Invitation\" && /*#__PURE__*/_jsxs(ButtonWrapper, {\n      children: [/*#__PURE__*/_jsx(TextButton, {\n        onClick: onOpenDialog,\n        children: \"Xem chi ti\\u1EBFt\"\n      }), /*#__PURE__*/_jsx(InvitationApplyDialog, {\n        isOpen: open,\n        invitationApplyId: invitationApply === null || invitationApply === void 0 ? void 0 : invitationApply._id,\n        onClose: () => setOpen(false)\n      })]\n    }), /*#__PURE__*/_jsxs(Action, {\n      className: open && \"mt-3\",\n      children: [(description === null || description === void 0 ? void 0 : description.length) > 150 && /*#__PURE__*/_jsx(ExpandButton, {\n        onClick: () => setOpen(!open),\n        children: open ? t(\"header.collapse\") : t(\"header.extend\")\n      }), /*#__PURE__*/_jsx(DateTime, {\n        children: dayjs(createdAt === null || createdAt === void 0 ? void 0 : createdAt.toString()).format(\"DD/MM/YYYY\")\n      })]\n    })]\n  });\n};\n\nexport default Notify;","map":null,"metadata":{},"sourceType":"module"}