{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useCallback, useEffect, Fragment } from \"react\";\nimport Cropper from \"react-easy-crop\";\nimport { useTranslation } from \"next-i18next\";\nimport Button from \"@designs/Button\";\nimport { getCroppedImg, readFile } from \"@common/functions\";\nimport { Dialog, Transition } from \"@headlessui/react\";\n\nconst ImageCropper = props => {\n  const {\n    image,\n    aspect = 1,\n    onConfirm,\n    onClose,\n    isOpen = false,\n    shape = \"rect\",\n    isLoading,\n    fileType = \"image/jpeg\"\n  } = props;\n  const {\n    0: imageSrc,\n    1: setImageSrc\n  } = useState(\"\");\n  const {\n    0: crop,\n    1: setCrop\n  } = useState({\n    x: 0,\n    y: 0\n  });\n  const {\n    0: zoom,\n    1: setZoom\n  } = useState(1);\n  const {\n    0: croppedAreaPixels,\n    1: setCroppedAreaPixels\n  } = useState({\n    x: 0,\n    y: 0,\n    width: 100,\n    height: 100\n  });\n  const {\n    t\n  } = useTranslation([\"common\"]);\n  useEffect(() => {\n    loadImage();\n  }, [image]);\n  useEffect(() => {\n    if (!isOpen) {\n      setZoom(1);\n      setImageSrc(\"\");\n    }\n  }, [isOpen]);\n\n  const loadImage = async () => {\n    const imageSrc = await readFile(image);\n    setImageSrc(imageSrc);\n  };\n\n  const handleCropComplete = useCallback((croppedArea, _croppedAreaPixels) => {\n    setCroppedAreaPixels(_croppedAreaPixels);\n  }, []);\n\n  const handleConfirm = async () => {\n    const croppedImage = await getCroppedImg(imageSrc, croppedAreaPixels, fileType);\n    onConfirm && onConfirm(croppedImage.file, croppedImage.base64File);\n  };\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return /*#__PURE__*/_jsx(Transition, {\n    appear: true,\n    show: isOpen,\n    as: Fragment,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      as: \"div\",\n      className: \"fixed inset-0 z-40 overflow-y-auto bg-grey bg-opacity-40\",\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"min-h-screen px-1 text-center phone:px-4\",\n        children: [/*#__PURE__*/_jsx(Transition.Child, {\n          as: Fragment,\n          enter: \"ease-out duration-300\",\n          enterFrom: \"opacity-0\",\n          enterTo: \"opacity-100\",\n          leave: \"ease-in duration-200\",\n          leaveFrom: \"opacity-100\",\n          leaveTo: \"opacity-0\",\n          children: /*#__PURE__*/_jsx(Dialog.Overlay, {\n            className: \"fixed inset-0\"\n          })\n        }), /*#__PURE__*/_jsx(\"span\", {\n          className: \"inline-block h-screen align-middle\",\n          \"aria-hidden\": \"true\",\n          children: \"\\u200B\"\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"inline-block w-11/12 p-2 align-middle bg-white rounded-md h-50 laptop:w-80\",\n          children: /*#__PURE__*/_jsx(Transition.Child, {\n            as: Fragment,\n            enter: \"ease-out duration-300\",\n            enterFrom: \"opacity-0 scale-95\",\n            enterTo: \"opacity-100 scale-100\",\n            leave: \"ease-in duration-200\",\n            leaveFrom: \"opacity-100 scale-100\",\n            leaveTo: \"opacity-0 scale-95\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"text-left transition-all transform shadow-xl rounded-2xl\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"h-40 w-30\",\n                children: /*#__PURE__*/_jsx(Cropper, {\n                  image: imageSrc,\n                  crop: crop,\n                  zoom: zoom,\n                  aspect: aspect,\n                  onCropChange: setCrop,\n                  onCropComplete: handleCropComplete,\n                  onZoomChange: setZoom,\n                  cropShape: shape\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"absolute right-0 flex w-full -bottom-7 gap-x-1\",\n                children: [/*#__PURE__*/_jsx(Button, {\n                  type: \"button\",\n                  onClick: handleClose,\n                  className: \"w-1/2 border border-solid border-primary\",\n                  children: t(\"dialog.cancel\")\n                }), /*#__PURE__*/_jsx(Button, {\n                  primary: true,\n                  type: \"button\",\n                  loading: isLoading,\n                  onClick: handleConfirm,\n                  className: \"w-1/2\",\n                  children: !isLoading && t(\"dialog.confirm\")\n                })]\n              })]\n            })\n          })\n        })]\n      })\n    })\n  });\n};\n\nexport default ImageCropper;","map":null,"metadata":{},"sourceType":"module"}